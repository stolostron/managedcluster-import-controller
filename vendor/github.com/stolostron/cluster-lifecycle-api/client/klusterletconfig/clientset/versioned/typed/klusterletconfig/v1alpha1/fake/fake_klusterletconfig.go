// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	klusterletconfigv1alpha1 "github.com/stolostron/cluster-lifecycle-api/client/klusterletconfig/clientset/versioned/typed/klusterletconfig/v1alpha1"
	v1alpha1 "github.com/stolostron/cluster-lifecycle-api/klusterletconfig/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeKlusterletConfigs implements KlusterletConfigInterface
type fakeKlusterletConfigs struct {
	*gentype.FakeClientWithList[*v1alpha1.KlusterletConfig, *v1alpha1.KlusterletConfigList]
	Fake *FakeConfigV1alpha1
}

func newFakeKlusterletConfigs(fake *FakeConfigV1alpha1) klusterletconfigv1alpha1.KlusterletConfigInterface {
	return &fakeKlusterletConfigs{
		gentype.NewFakeClientWithList[*v1alpha1.KlusterletConfig, *v1alpha1.KlusterletConfigList](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("klusterletconfigs"),
			v1alpha1.SchemeGroupVersion.WithKind("KlusterletConfig"),
			func() *v1alpha1.KlusterletConfig { return &v1alpha1.KlusterletConfig{} },
			func() *v1alpha1.KlusterletConfigList { return &v1alpha1.KlusterletConfigList{} },
			func(dst, src *v1alpha1.KlusterletConfigList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.KlusterletConfigList) []*v1alpha1.KlusterletConfig {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.KlusterletConfigList, items []*v1alpha1.KlusterletConfig) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
