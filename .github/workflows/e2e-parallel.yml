# Copyright Contributors to the Open Cluster Management project

name: E2E Tests - Parallel Execution

on:
  pull_request:
    branches: [main, release-*, backplane-*]
    paths-ignore:
      - ".tekton/**"
      - "docs/**"
  push:
    branches: [main, release-*, backplane-*]
    paths-ignore:
      - ".tekton/**"
      - "docs/**"

env:
  GO_VERSION: '1.23'
  KIND_VERSION: 'v0.20.0'

jobs:
  e2e-test-import:
    name: "E2E Tests - Import (Manual, Auto, ClusterDeployment)"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "v1.24.0"
        id: install

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        run: make build-image

      - name: Run E2E Import Tests
        run: make e2e-test-import

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-import-results
          path: _output/

      - if: ${{ failure() }}
        name: Logs after Tests Failed
        run: kubectl -n open-cluster-management logs -l name=managedcluster-import-controller --tail=-1

  e2e-test-cluster-mgmt:
    name: "E2E Tests - Cluster Management"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "v1.24.0"
        id: install

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        run: make build-image

      - name: Run E2E Cluster Management Tests
        run: make e2e-test-cluster-mgmt

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-cluster-mgmt-results
          path: _output/

      - if: ${{ failure() }}
        name: Logs after Tests Failed
        run: kubectl -n open-cluster-management logs -l name=managedcluster-import-controller --tail=-1

  e2e-test-klusterlet-config:
    name: "E2E Tests - Klusterlet Configuration"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "v1.24.0"
        id: install

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        run: make build-image

      - name: Run E2E Klusterlet Configuration Tests
        run: make e2e-test-klusterlet-config

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-klusterlet-config-results
          path: _output/

      - if: ${{ failure() }}
        name: Logs after Tests Failed
        run: kubectl -n open-cluster-management logs -l name=managedcluster-import-controller --tail=-1




  e2e-test-summary:
    name: "E2E Tests - Summary"
    runs-on: ubuntu-latest
    needs: [e2e-test-import, e2e-test-cluster-mgmt, e2e-test-klusterlet-config]
    if: always()
    steps:
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: test-results/

      - name: Generate summary
        run: |
          echo "## E2E Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Test Group | Status | Duration |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|----------|" >> $GITHUB_STEP_SUMMARY

          # Check each group's status
          if [ "${{ needs.e2e-test-import.result }}" == "success" ]; then
            echo "| Import Tests | ✅ Success | - |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Import Tests | ❌ Failed | - |" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.e2e-test-cluster-mgmt.result }}" == "success" ]; then
            echo "| Cluster Management | ✅ Success | - |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Cluster Management | ❌ Failed | - |" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.e2e-test-klusterlet-config.result }}" == "success" ]; then
            echo "| Klusterlet Config | ✅ Success | - |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Klusterlet Config | ❌ Failed | - |" >> $GITHUB_STEP_SUMMARY
          fi


          if [ "${{ needs.e2e-test-others.result }}" == "success" ]; then
            echo "| Others (CSR, Registry, Cleanup) | ✅ Success | - |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Others (CSR, Registry, Cleanup) | ❌ Failed | - |" >> $GITHUB_STEP_SUMMARY
          fi