// Code generated for package bindata by go-bindata DO NOT EDIT. (@generated)
// sources:
// resources/hub/managedcluster/manifests/managedcluster-clusterrole.yaml
// resources/hub/managedcluster/manifests/managedcluster-clusterrolebinding.yaml
// resources/hub/managedcluster/manifests/managedcluster-service-account.yaml
// resources/klusterlet/bootstrap_secret.yaml
// resources/klusterlet/cluster_role.yaml
// resources/klusterlet/cluster_role_binding.yaml
// resources/klusterlet/crds/v1/0000_00_operator.open-cluster-management.io_klusterlets.crd.yaml
// resources/klusterlet/crds/v1beta1/0000_00_operator.open-cluster-management.io_klusterlets.crd.yaml
// resources/klusterlet/image_pull_secret.yaml
// resources/klusterlet/klusterlet.yaml
// resources/klusterlet/klusterlet_admin_aggregate_clusterrole.yaml
// resources/klusterlet/namespace.yaml
// resources/klusterlet/operator.yaml
// resources/klusterlet/service_account.yaml
package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _hubManagedclusterManifestsManagedclusterClusterroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x31\x4f\xe3\x50\x0c\xc7\xf7\xf7\x29\xac\x74\xbd\xe6\x74\xdb\xe9\x6d\xa7\x0e\x37\x01\x12\x03\x0b\xea\xe0\x24\x26\x31\x4d\x9e\x1f\xb6\xd3\xaa\x54\xfd\xee\xa8\x4d\x40\x40\xe9\x64\x4b\xfe\xc9\xfe\xfd\xbd\x80\x95\xe4\xbd\x72\xdb\x39\xac\x24\xb9\x72\x35\xba\xa8\x81\x0b\x78\x47\x70\x97\x29\xc1\xaa\x1f\xcd\x49\xe1\x06\x13\xb6\x34\x50\x72\xc8\x2a\xcf\x54\x7b\x08\x98\xf9\x81\xd4\x58\x52\x04\xad\xb0\x2e\x71\xf4\x4e\x94\x5f\xd1\x59\x52\xb9\xf9\x6b\x25\xcb\xef\xed\x9f\xb0\xe1\xd4\xc4\xf7\x55\xf7\xd2\x53\x18\xc8\xb1\x41\xc7\x18\x00\x12\x0e\x14\xc1\xf6\xe6\x34\x44\xc9\x94\x96\xf5\x44\x2e\x87\x8f\xa3\x71\x6a\x9b\x79\x12\x2b\x11\x37\x57\xcc\xf1\x70\x80\x72\x92\x6b\xe6\x03\xb7\x38\x10\x1c\x8f\x41\xc7\x9e\x2c\x86\x05\xfc\xeb\x7b\xd9\xc1\xbc\x01\xb0\x3d\x85\x70\x01\x15\x47\x27\x60\x37\xa8\x49\x9d\x9f\xb8\x46\xa7\xb0\x04\xcc\xfc\x5f\x65\xcc\x16\xe1\xb1\xf8\x34\xb2\x39\x52\xb1\x0e\x00\x4a\x26\xa3\xd6\x74\x01\x71\x9b\x38\xb5\x4a\x2f\x23\x99\xdb\x99\xdd\x92\x56\x13\xa7\x84\x4e\xc5\x2f\x28\x5a\xf2\x53\xe9\xd9\xce\x75\x87\x5e\x77\xc5\xfa\xba\x6c\x4b\x7e\x61\x36\xc5\x2d\xaf\xbc\xec\x47\xd1\xaf\x6f\xfc\x66\x37\x3b\xcd\x92\xeb\xf0\x16\x00\x00\xff\xff\xf7\xf9\xea\x7a\x21\x02\x00\x00")

func hubManagedclusterManifestsManagedclusterClusterroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_hubManagedclusterManifestsManagedclusterClusterroleYaml,
		"hub/managedcluster/manifests/managedcluster-clusterrole.yaml",
	)
}

func hubManagedclusterManifestsManagedclusterClusterroleYaml() (*asset, error) {
	bytes, err := hubManagedclusterManifestsManagedclusterClusterroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hub/managedcluster/manifests/managedcluster-clusterrole.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _hubManagedclusterManifestsManagedclusterClusterrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x31\x6b\x02\x41\x10\x85\xfb\xfd\x15\x83\xa9\xbd\x90\x2e\x6c\x17\x2d\x52\x25\x01\x03\xe9\xe7\xf6\x26\x3a\xd1\x9d\x59\x66\x67\x05\x23\xfe\xf7\xa0\x9e\x42\x10\xd2\xa5\x5b\x98\xf7\xde\xf7\xb1\x77\x30\xd7\xb2\x33\x5e\xae\x1c\xe6\x2a\x6e\xdc\x37\x57\xab\xe0\x0a\xbe\x22\x78\x2b\x24\x30\xdf\xb4\xea\x64\xf0\x82\x82\x4b\xca\x24\x0e\xc5\xf4\x8b\x92\x87\x80\x85\x3f\xc8\x2a\xab\x44\xb0\x1e\x53\x87\xcd\x57\x6a\xfc\x8d\xce\x2a\xdd\xfa\xb1\x76\xac\xf7\xdb\x87\xb0\x66\x19\xe2\x65\x6a\xa1\x1b\x9a\xb1\x0c\x2c\xcb\x90\xc9\x71\x40\xc7\x18\x00\x04\x33\x45\xa8\xbb\xea\x94\xa3\x16\x92\x69\x3a\x17\xa6\xf9\xca\x8e\xe7\xe7\x30\x5e\x62\xaf\xea\xd5\x0d\x4b\xdc\xef\xa1\x3b\x3b\x0e\x23\xe7\x15\x33\xc1\xe1\x10\x4c\x37\xb4\xa0\xcf\x23\x02\x0b\x3f\x9b\xb6\xf2\x87\x6e\x00\xb8\xb1\xfd\x47\xb9\xda\xfa\xe3\x5f\xd6\x18\xa6\x23\xf7\x9d\x6c\xcb\x89\x9e\x52\xd2\x26\x7e\x45\x4f\x8e\x1b\xb3\xcb\xe2\xef\xd0\x38\x36\x19\xc3\xb5\x60\xba\x34\x6e\xa9\xa7\xeb\x29\xfd\x13\x00\x00\xff\xff\xa1\xce\xea\x83\x00\x02\x00\x00")

func hubManagedclusterManifestsManagedclusterClusterrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_hubManagedclusterManifestsManagedclusterClusterrolebindingYaml,
		"hub/managedcluster/manifests/managedcluster-clusterrolebinding.yaml",
	)
}

func hubManagedclusterManifestsManagedclusterClusterrolebindingYaml() (*asset, error) {
	bytes, err := hubManagedclusterManifestsManagedclusterClusterrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hub/managedcluster/manifests/managedcluster-clusterrolebinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _hubManagedclusterManifestsManagedclusterServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\xb1\x6a\xc4\x30\x10\x84\xe1\x5e\x4f\x31\x38\x7d\x20\xad\xba\xc4\x75\x9c\x22\x90\x7e\x23\x2f\xb6\x92\xd3\xae\x58\xad\x0d\x87\xf1\xbb\x1f\xdc\xd9\xc5\xd5\xf3\x0d\xfc\x2f\xe8\xb5\x5e\x2d\x4f\xb3\xa3\x57\x71\xcb\xbf\x8b\xab\x35\xb8\xc2\x67\xc6\x57\x65\x41\x7f\x59\x9a\xb3\xe1\x93\x84\x26\x2e\x2c\x8e\x6a\xfa\xc7\xc9\x43\xa0\x9a\x7f\xd8\x5a\x56\x89\x58\xdf\xc2\x7f\x96\x31\xe2\x9b\x6d\xcd\x89\xdf\x53\xd2\x45\x3c\x14\x76\x1a\xc9\x29\x06\x40\xa8\x70\x44\xb7\x6d\x78\xfd\x50\xf5\xe6\x46\xf5\x99\x0f\x54\x18\xfb\xde\x1d\xb8\x55\x4a\xe7\xe3\x11\x30\x1e\x3d\xc3\xb9\xde\xf5\x2d\x00\x00\xff\xff\x9b\xd4\xc7\xa7\xca\x00\x00\x00")

func hubManagedclusterManifestsManagedclusterServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_hubManagedclusterManifestsManagedclusterServiceAccountYaml,
		"hub/managedcluster/manifests/managedcluster-service-account.yaml",
	)
}

func hubManagedclusterManifestsManagedclusterServiceAccountYaml() (*asset, error) {
	bytes, err := hubManagedclusterManifestsManagedclusterServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hub/managedcluster/manifests/managedcluster-service-account.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _klusterletBootstrap_secretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8d\xb1\x4e\xc3\x40\x10\x44\xfb\xfb\x8a\x91\xa9\x83\x44\x7b\x25\x2e\x23\x48\x81\x44\xbf\x76\x16\xfb\x48\xbc\xbb\xec\xed\x21\x45\x51\xfe\x1d\x01\x36\xd4\x33\xef\xbd\x3b\xf4\x6a\x17\x2f\xd3\x1c\xe8\x55\xc2\xcb\xd0\x42\xbd\x22\x14\x31\x33\x0e\xc6\x82\xfe\xdc\x6a\xb0\xe3\x89\x84\x26\x5e\x58\x02\xe6\xfa\xce\x63\xa4\x44\x56\x5e\xd9\x6b\x51\xc9\xf8\x7c\x48\xa7\x22\xc7\x8c\x17\x1e\x9d\x23\x2d\x1c\x74\xa4\xa0\x9c\x00\xa1\x85\x33\xba\x41\x35\x6a\x38\xd9\x6e\x6e\xc3\xee\xd4\x06\x1e\x55\xde\xca\xd4\xad\x97\x6a\x34\x7e\xff\xae\x57\xdc\xef\x7f\xb3\x67\x8e\xe7\x6d\xc1\xed\xd6\xa5\xb8\x18\x67\x1c\x8c\x3e\x1a\xa7\xcd\xff\xaf\x5a\xe9\xc7\xad\xb4\xff\x5b\x7e\xe8\xaf\x00\x00\x00\xff\xff\xfb\xf6\x72\x27\xf2\x00\x00\x00")

func klusterletBootstrap_secretYamlBytes() ([]byte, error) {
	return bindataRead(
		_klusterletBootstrap_secretYaml,
		"klusterlet/bootstrap_secret.yaml",
	)
}

func klusterletBootstrap_secretYaml() (*asset, error) {
	bytes, err := klusterletBootstrap_secretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "klusterlet/bootstrap_secret.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _klusterletCluster_roleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x3d\x8f\xdb\x30\x0c\xdd\xfd\x2b\x04\xdf\x7a\x49\xd0\xad\xf0\x56\x64\xe8\x54\x14\xe8\xd0\xa5\xc8\xc0\x48\x8c\xa3\x46\x16\x05\x92\x4a\x7a\xfd\xf5\x85\x9c\x8f\x36\xb1\xdd\xe6\xd0\x0c\x37\x59\x5f\x7c\x7c\xef\x89\xa2\x9f\xcc\x92\xd2\x0b\xfb\x76\xab\x66\x49\x51\xd9\xaf\xb3\x12\x8b\x51\x32\xba\x45\xf3\x39\x61\x34\xcb\x90\x45\x91\xcd\x27\x88\xd0\x62\x87\x51\x4d\x62\xfa\x8e\x56\xab\x0a\x92\xff\x8a\x2c\x9e\x62\x63\x78\x0d\x76\x0e\x59\xb7\xc4\xfe\x27\xa8\xa7\x38\xdf\xbd\x97\xb9\xa7\xc5\xfe\x5d\xb5\xf3\xd1\x35\x67\xa8\x2f\x14\xb0\xea\x50\xc1\x81\x42\x53\x19\x13\xa1\xc3\xc6\xec\x8e\xbb\x01\xb5\xe2\x1c\x50\x9a\xea\xc9\x7c\x08\x81\x0e\x3d\x17\xc6\xd6\x8b\x72\x0f\x3c\xa3\x84\x0c\x4a\x5c\x88\x5a\x46\x50\x34\x07\xe2\x5d\x20\x70\xd5\xcc\x40\xf2\x1f\x99\x72\x92\xc6\x7c\xab\xeb\x55\x65\x0c\xa3\x50\x66\x8b\xfd\x8a\xa0\x65\x54\xa9\x9f\x4d\x6d\x29\x6e\x7c\xdb\x41\xea\x67\x82\xbc\xf7\x16\xc1\x5a\xca\x51\xa5\x8f\xdc\x23\xaf\xfb\xa8\x63\x9a\x72\xac\x45\x2d\x9f\xe0\xa5\xff\xe6\xe4\x4e\x1b\x07\x50\xbb\x2d\x83\x74\x1e\x38\x0c\xa8\x58\xaf\x6e\x49\x8d\xd9\x34\x42\x34\xaf\x8b\xcd\x60\x2d\x8a\x30\xee\x3d\x1e\xc6\x49\x0d\xf0\x87\x58\xc5\x62\x49\x60\xf1\x5e\x59\x27\x31\x93\x12\x46\x52\x90\xbb\x45\x1f\xc5\x1c\x42\x3d\x9b\x1a\xf7\x18\x55\x26\xad\x38\x6e\x4f\x51\xbf\xf8\x7d\xba\x8b\xa1\xdf\x29\xc9\x10\xd4\x61\x0a\xf4\xd2\xfd\x0d\xf9\x01\x77\x3d\xf9\x2e\x86\x84\xec\xf1\x05\x30\x05\x5c\xfb\xe8\x7c\x6c\xfb\xba\xbc\x9a\xbf\x35\xa2\x17\x86\x0f\xa4\x56\xea\x41\x2c\x84\xd3\xb9\xa2\xbd\x5e\xbd\xaa\x1b\x58\x76\x32\x2c\x02\x8f\x3f\x14\x63\x69\x57\xd3\x95\x66\xb3\x28\x75\xe7\x25\x87\x1b\x1f\x7d\xc9\xf2\x50\xe7\xef\x92\xd2\xf5\x0d\xf7\x8f\xb6\x58\xe4\xc8\xfc\x56\xd6\x39\x64\x4e\x09\xe3\xec\x74\x33\xb3\xee\xd2\xad\x47\x55\xfe\x06\xbd\xe7\xc5\x5e\xc9\xfa\x67\x1d\xfd\x2f\xa1\x85\x28\x68\xbe\xe1\x75\x9b\xff\x4e\x0f\x8b\x8e\xc5\x31\x76\xd1\x07\x1a\x48\x29\x78\x74\x1d\x44\xbf\x41\xd1\xf2\xdb\x18\x7a\x5a\x56\x5f\x45\x7f\x0c\xf5\x5a\xc0\xb0\x3e\xce\x42\x7e\x05\x00\x00\xff\xff\xcd\x10\xb6\x44\x86\x07\x00\x00")

func klusterletCluster_roleYamlBytes() ([]byte, error) {
	return bindataRead(
		_klusterletCluster_roleYaml,
		"klusterlet/cluster_role.yaml",
	)
}

func klusterletCluster_roleYaml() (*asset, error) {
	bytes, err := klusterletCluster_roleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "klusterlet/cluster_role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _klusterletCluster_role_bindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x31\x4f\xc3\x40\x0c\x85\xf7\xfb\x15\x56\x99\x09\x62\x43\xb7\x41\x06\x06\x04\x48\x45\x62\x77\x2e\x26\x31\x49\xec\x93\xcf\x57\x09\xaa\xfe\x77\x54\x95\xb2\x10\x75\xf5\xe7\xf7\xbe\x77\x05\xad\xe6\x2f\xe3\x61\x74\x68\x55\xdc\xb8\xab\xae\x56\xc0\x15\x7c\x24\x78\xcd\x24\xd0\xce\xb5\x38\x19\x3c\xa3\xe0\x40\x0b\x89\x43\x36\xfd\xa4\xe4\x21\x60\xe6\x77\xb2\xc2\x2a\x11\xac\xc3\xd4\x60\xf5\x51\x8d\xbf\xd1\x59\xa5\x99\xee\x4a\xc3\x7a\xb3\xbb\x0d\x13\x4b\x1f\xcf\x55\x5b\x9d\xe9\x81\xa5\x67\x19\xc2\x42\x8e\x3d\x3a\xc6\x00\x20\xb8\x50\x84\xe9\xf4\x34\x93\x07\xd3\x99\xb6\xf4\x71\x64\x98\xf9\xd1\xb4\xe6\x0b\x9e\x00\xf0\x4f\xb3\xd6\x5a\x6a\x77\x5c\x5f\x62\xb8\xfe\x0d\xbc\x91\xed\x38\xd1\x7d\x4a\x5a\xc5\xd7\x32\xa7\x53\xc9\x98\x28\xc2\x66\xbf\x87\xe6\xe9\x0f\xbe\x9c\x09\x1c\x0e\x9b\xf0\x13\x00\x00\xff\xff\xf2\xf1\x30\xe3\x54\x01\x00\x00")

func klusterletCluster_role_bindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_klusterletCluster_role_bindingYaml,
		"klusterlet/cluster_role_binding.yaml",
	)
}

func klusterletCluster_role_bindingYaml() (*asset, error) {
	bytes, err := klusterletCluster_role_bindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "klusterlet/cluster_role_binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _klusterletCrdsV10000_00_operatorOpenClusterManagementIo_klusterletsCrdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xdd\x93\xdc\xb6\x91\x7f\xdf\xbf\xa2\x6b\xee\xaa\xb4\xeb\x9b\xe1\x7a\xed\x2b\x5f\x32\x17\xc7\xa5\xc8\xd2\x95\xca\x96\xb2\xa5\xdd\x28\x55\xd1\xee\x5d\x40\xa2\x39\x03\x2f\x09\xd0\x00\x38\xbb\x4c\x2a\xff\xfb\x55\x37\xf8\x35\x1c\x92\x33\xb2\xe4\x7b\xb8\x0a\x9f\x86\x24\xd8\x68\xf4\xc7\xaf\x3f\x80\x11\x85\x7a\x8f\xd6\x29\xa3\xd7\x20\x0a\x85\x4f\x1e\x35\xdd\xb9\xe8\xe1\x37\x2e\x52\xe6\x72\x77\x75\xf6\xa0\xb4\x5c\xc3\x8b\xd2\x79\x93\xbf\x43\x67\x4a\x9b\xe0\xf7\x98\x2a\xad\xbc\x32\xfa\x2c\x47\x2f\xa4\xf0\x62\x7d\x06\xa0\x45\x8e\x6b\x78\xc8\x4a\xe7\xd1\x66\xe8\x5d\x64\x0a\xb4\xc2\x1b\x4b\x3f\xf4\x2a\x09\x6f\x56\xb9\xd0\x62\x83\x39\x6a\x1f\x29\x73\xe6\x0a\x4c\xe8\xeb\x8d\x35\x65\xb1\x86\x53\x3e\x09\x53\x39\xfa\x0a\x20\x30\xf8\x43\x3b\x2b\x3f\xcc\x94\xf3\x3f\x0c\x5e\xfc\xa8\x5c\x78\x59\x64\xa5\x15\xd9\x1e\xa7\xfc\xdc\x29\xbd\x29\x33\x61\xfb\x6f\xce\x00\x5c\x62\x0a\x5c\xc3\x8b\xf0\xec\x0c\xa0\xb0\xe8\xd0\xee\xf0\x4f\xfa\x41\x9b\x47\xfd\x4a\x61\x26\xdd\x1a\x52\x91\x39\x3c\x03\xd8\x05\x91\x32\x7b\xab\x5a\x28\xbb\xab\x30\x43\xb2\xc5\x5c\x04\xbe\x81\x96\xaa\x9f\x5f\xbf\x7e\xff\xf5\xcd\xde\x63\x00\x89\x2e\xb1\xaa\xf0\xac\x98\x6e\x01\x60\x91\xa7\xd6\xde\x41\x62\xb4\xb7\x26\xcb\xd0\x3a\x30\x1a\xfc\x16\x21\xc8\x48\x42\x2d\xb3\x08\xfe\xbc\x45\xdd\xd2\x04\xfa\x24\x55\x9b\xd2\xa2\x5c\xf2\xf8\x3d\xc2\x3f\x97\xca\xa2\x03\x01\x0e\x13\x8b\x9e\xd9\x96\x60\x52\x88\x8d\xf1\xce\x5b\x51\xac\xb6\x65\xbc\x7a\x28\x63\x0c\x74\x7a\x84\x55\x98\xdf\x89\x1c\x83\x62\x0a\x91\x20\x78\x03\x22\xcb\xcc\x23\x3c\xbf\x7e\xcd\x13\xa0\xf3\x8e\x9e\xd2\xd8\x6d\x19\x43\x6a\x2c\xff\xb6\xb8\x51\x34\x03\xdb\x53\x47\xb5\xb0\xc6\x9b\xc4\x64\x51\xfb\xcc\x57\xa4\x07\x13\xff\x84\x89\x3f\xeb\x0d\x2b\xd0\x7a\xd5\x98\x43\xb8\x7a\x96\xdd\x7b\x3a\x90\xec\x33\x12\x7e\x18\x05\x92\x4c\x1a\x1d\x33\x54\x2b\x10\x65\xad\x2f\x12\x83\xdf\x2a\xd7\xc9\x7f\xc8\x2b\x6b\x33\x05\xa1\x6b\xee\x22\xb8\x21\x03\xb1\x0e\xdc\xd6\x94\x99\x24\xd9\xef\xd0\x92\xa0\x13\xb3\xd1\xea\x6f\x2d\xed\x56\x22\x99\xf0\xe8\xfc\x80\xa6\xd2\x1e\xad\x16\x19\xec\x44\x56\xe2\x12\x84\x96\x90\x8b\x0a\x2c\xd2\x2c\x50\xea\x1e\x3d\x1e\xe2\x22\x78\x63\x2c\x82\xd2\xa9\x59\xc3\xd6\xfb\xc2\xad\x2f\x2f\x37\xca\x37\x1e\x9d\x98\x3c\x2f\xb5\xf2\xd5\x25\x5b\x90\x8a\x4b\x6f\xac\xbb\x94\xb8\xc3\xec\xd2\xa9\xcd\x4a\xd8\x64\xab\x3c\x26\xbe\xb4\x78\x29\x0a\xb5\x62\xd6\xb5\x67\x58\xc8\xe5\xbf\xd8\x1a\x03\xdc\xb3\x3d\x5e\x83\x6e\x9c\xb7\x4a\xf7\x4d\x83\x9d\x73\x46\x03\xe4\xa3\xa0\xd8\xee\xf8\xd3\xb0\x8a\x4e\xd0\xf4\x88\xa4\xf3\xee\xe5\xcd\x2d\x34\x53\xb3\x32\x86\xd2\x67\xb9\xf7\x3c\xa4\x53\x01\x09\x4c\xe9\x14\x6d\x50\x62\x6a\x4d\xce\x34\x51\xcb\xc2\x28\xed\xf9\x26\xc9\x14\xea\xa1\xf8\x5d\x19\xe7\xca\xbb\xbe\xf5\x46\xf0\x42\x68\x6d\x3c\xc4\x08\x65\x21\x85\x47\x19\xc1\x6b\x0d\x2f\x44\x8e\xd9\x0b\xe1\xf0\x57\x57\x00\x49\xda\xad\x48\xb0\xa7\xa9\xa0\x8f\xd0\xc3\xc1\x03\x5f\x02\x68\xc0\x78\x42\x5f\x37\x05\x26\x7d\x14\x22\xc9\x49\x74\xca\xa2\x04\x89\x45\x66\x2a\x82\xe8\x16\x69\xd8\x4d\xc8\x31\x06\xe8\xdc\x5d\x62\x43\x90\x7e\x0a\x67\x53\x9e\x4e\x57\x8d\x78\x6f\x09\x6a\x07\xaf\x06\x0b\x78\xd1\x8d\x24\xb3\x23\xfe\x09\xb1\x82\x87\x1f\x40\x28\xf9\x66\x8c\x07\x14\x01\x12\x8b\xa4\x79\x42\xde\x6d\x19\x47\x70\xbb\x0f\xa7\xbc\x2a\xd8\xa0\xa6\x50\xc6\xa8\x6a\x85\x96\x26\x0f\x73\xa9\x74\x84\xa2\xf2\xc4\x0f\x19\x96\x43\xbf\x04\x63\x41\x2a\x97\x18\x36\x60\xe2\x4c\x14\xb4\x7c\xab\x84\xc7\x96\xbb\xc0\xb9\x86\x3f\x16\xa8\x6f\xb6\x2a\x1d\x08\x72\xc6\x26\xe8\xa2\x68\x4f\xd8\x12\xdc\xe4\x4f\xef\x7e\x3c\x10\xeb\x40\x76\x2f\x0f\x3e\x18\x9a\x82\xe0\xb8\xcb\x48\x58\x28\x0e\x91\x76\x64\xa9\xa5\xcd\x1c\x23\x59\x22\x20\x2e\xb5\xcc\x18\x76\x05\x0b\x40\x24\x09\x3a\xa7\xe2\x0c\x5b\xfe\xb2\x0a\x5e\xa7\xb5\x7c\x1c\x7a\xc0\xbc\xf0\xd5\x72\x84\xee\x50\x79\x5b\x41\x02\xed\xd3\xe9\x51\x2f\x6d\x16\x26\xa5\x48\x94\xb4\xa1\xfd\x40\xd1\x42\xc3\x4e\x39\x35\x29\x5a\x61\xad\xa8\x0e\xde\x29\x8f\xf9\x88\x38\x87\xde\xd4\x08\xf2\x40\x8e\x8d\xf4\x98\xcd\x3d\x51\x8d\xd0\x84\x79\xe9\x8d\x7c\x31\xe9\x62\xe1\x9a\x76\xb4\x46\x28\x7f\x60\x5e\xc6\xdf\x0e\x3d\xee\x79\x18\xdc\xb8\x5b\xbb\x12\x72\xae\xc4\x68\x4d\xb0\x4d\xb9\xc2\x8c\xc5\x84\x6b\xdc\x47\x23\xb8\xa9\x9c\xc7\x1c\x12\xb4\xde\x81\xb0\x08\xa5\x43\x09\x2a\xed\x7c\x6a\x92\xa4\xc3\x11\xc5\xf6\x65\x34\xea\x39\xcd\x95\x1a\x9b\x0b\xbf\x86\xb8\xf2\xe3\x7a\x29\x6d\x76\x92\x8c\xc8\x04\x6a\xf1\x90\xc2\xfb\xfe\xd3\x45\xa9\xfd\xe5\x4f\x2e\xa9\x11\xcb\xc7\x2f\xab\x4d\xdd\x8e\xe0\xc0\xdb\x36\xc5\xeb\x21\x68\x9b\xf3\x85\x30\x10\xcc\x98\xc1\x9d\xc1\xb1\x1d\x32\xe6\xb7\xa5\xf3\xb0\x15\x3b\xc2\x8f\xc2\x62\xaa\x9e\x68\xad\x8b\x89\xfc\x7f\xb5\x08\x69\xd0\x11\xfd\x32\x8a\xee\x33\x37\x47\x94\x59\x5d\x10\x39\x36\x1e\x6f\x46\x7d\x97\x57\x36\x12\xb2\x8e\x09\xd6\x48\xbc\xce\x44\xc2\x53\x1d\x13\x6e\x7f\x2c\xa0\x16\x31\xc1\x23\x3e\x15\x99\x4a\x94\x6f\xd2\x7e\xa0\xc0\x10\x92\xee\x64\x8b\xb2\xcc\xc6\x8d\xb4\x36\x99\xc0\x38\x4a\x28\x8c\x74\x53\x9c\x4f\xa0\xc1\x3c\x16\xd0\xca\x6e\x30\xc3\xc4\x1b\x3b\x6e\xe9\x07\x8b\x6b\x86\xb7\x19\xf7\xe3\x56\x25\x5b\x7e\x15\xac\xe9\xda\xc8\xe0\xc6\xf5\xd2\x26\x6d\xdd\xe8\x60\x5b\x12\x53\x51\x66\x01\x00\x75\x08\x0f\x1c\x87\xc6\x5d\xe0\x08\xf6\x01\x08\x29\xb9\xb4\x15\xd9\xf5\x11\x1c\x3c\x0a\x12\xde\x64\x18\x92\xa0\x09\x0a\x7b\xd2\xb9\xed\x46\xf3\x5a\xbc\x17\x24\x01\x88\x2b\x56\x1c\x17\x0a\x61\x08\x82\xd0\x15\x78\xa1\x0e\x32\xd6\x76\x66\x8a\x08\xb9\xf0\xc9\xb6\x96\xaa\xb7\xaa\xc8\x10\x7e\xf7\x80\xd5\x32\x14\x13\x98\xa6\x98\xf8\xdf\x43\xe9\x9a\x24\x9b\xc7\x4f\xc3\x5d\x53\x99\xc3\xef\x9a\x5f\xbf\xff\xe5\x0a\x18\x8f\x9b\x30\x17\x3b\x0f\x05\xb6\x45\x92\x4c\x48\xeb\x3b\xe9\xed\x09\xaf\x27\xb4\x61\xc9\xd0\x5d\xad\x34\x3f\x5a\x6e\x93\x24\xfb\xf2\x1c\x95\xdc\xac\x45\xcd\x98\xe7\xf1\xf0\x4c\x57\x60\x72\xfa\xfd\x30\xb5\xe3\xe1\xa0\xb4\x54\x09\x67\xac\xbc\x74\x96\x48\xa0\x44\x72\xe4\xe5\x4c\xf1\x1d\xae\x97\xac\xfb\x1c\x85\x76\x61\x38\x88\x2c\xdb\x23\xe4\x42\x5b\x82\x0b\x0d\x95\x2a\x94\xcb\xd0\x25\x98\x89\x68\x74\x85\xe2\x96\x61\xe1\xad\xb9\xa9\x81\x61\x09\xd7\x16\x53\xb4\xdd\x13\x8e\x0c\x6f\xcd\xcb\x27\x4c\x4a\x8f\x73\xbc\x9e\x10\xde\x01\x1e\xb0\x3a\x59\x84\x3f\x60\xd5\xc4\xc3\xb0\xde\x07\xac\x82\x39\xf1\xa3\xce\x3a\x45\x51\x64\x6a\xc6\x18\x99\x3b\x13\xcd\xca\xf2\x01\x2b\x17\x51\x5a\x4c\xb4\x1f\xc2\xcc\x93\x79\x71\x77\xb5\x76\xc8\x21\x37\x46\x78\xf9\xa4\x9c\x77\xff\x19\x3c\x28\x31\x79\xac\x74\x60\x32\x4c\xdb\x28\x7d\x96\x28\x71\xd5\xa8\x47\x4b\xbe\x65\xf6\x3e\x55\xf8\x0d\xb3\x27\x6b\xe0\x8f\xcd\xea\x7a\xd9\xb4\x20\x5e\x9e\x51\xa1\x92\x05\x64\xdd\xaa\x62\x3c\xba\xf7\xb8\xdb\x62\x58\x50\x04\xef\x45\xa6\x64\xcb\x49\xb0\xbf\x20\x33\x5e\xeb\xcb\x9f\x4b\x91\x45\xf0\x7d\xc0\xbf\x63\x2a\x6d\x86\xd7\x04\x48\x65\x3f\x97\x6a\x27\x32\x8a\xf4\xde\xc0\xa3\xca\x64\x22\xac\xe4\xc6\x58\xc0\x9a\x59\x8a\xce\x04\xfb\x12\x0c\x82\x54\xa9\x74\xe1\xa1\xb1\x14\xc7\xc9\x24\x14\xc2\x7a\x95\x94\x99\x98\xce\xae\x81\x13\x7b\x8f\x1b\x63\xab\x4f\xd6\x5d\x67\xee\x37\x98\x18\x2d\x67\x90\x6a\x32\x08\xd6\x5f\x0e\x6b\xa3\x02\xad\x32\x12\xcc\x58\x11\xdd\x63\x40\xe5\x38\x74\xbc\xf3\x90\x69\x34\xb6\x6f\xd2\x06\xdb\x5a\xc0\x38\xe2\x3d\x7e\x8b\xf6\x51\x39\xac\xfb\x48\x0a\x33\xee\x5d\xa9\x8d\x36\x16\xe5\x45\x17\x68\x3a\x14\x98\x87\xcb\x3f\x54\x4d\xec\x5c\x0e\x1b\x00\x35\xaf\xb5\x1b\xd6\x6a\x6d\xc9\xce\x52\x4d\x8d\x45\x4a\x0f\xcf\xa5\x61\x7a\xb8\x53\x89\xbf\x88\xe0\x2f\x68\x0d\x9b\xad\xc6\x8d\xf0\x6a\x87\x8d\xdb\x3e\xaa\x2c\x9b\xa5\x18\x53\x1c\x0c\x1d\x0f\xe1\xe0\x4b\x38\x67\x92\xa0\xf2\x1c\xa5\x12\x1e\xb3\xea\x82\xb2\x14\xce\x47\xb9\x18\x3b\x6e\x40\x4a\x7b\xdc\xcc\x14\x7b\x5d\x75\xa5\xb4\xff\xe6\xdf\x27\xc7\xf1\x12\x4e\xb6\xae\xf7\xdc\x5d\xdc\x83\xe9\xd0\x70\x1c\x98\x4a\x9d\x01\x1c\xc5\xe8\x1a\x81\x5b\x5c\x55\xae\xf6\xee\x65\x87\x22\x4d\x0b\x38\xc6\x93\x20\xba\x35\xb2\x9f\xc8\x4e\x05\x58\xe4\x3d\x89\xda\xe3\x7e\xa1\x67\xf6\x5b\xec\xaf\x73\xb1\xc1\xeb\x32\xcb\x6e\x0e\x7a\x7d\x07\xf2\x7a\x37\xf5\xdd\x54\x13\x50\xd1\xa0\xb1\x3e\xca\xb0\x23\xd8\xe7\xe8\x17\x94\x54\x8f\xc6\x3e\x7c\xcc\x42\xfe\x3c\x1c\x3f\xbb\x80\x7d\x76\xc7\x0b\x2b\xe2\xe0\x23\x19\x77\x5e\xf8\xd2\xcd\xb5\x57\x79\xc0\x90\xb5\xa4\xb4\x96\x42\x44\xf8\x7c\xbf\x9d\xfa\xb9\x1a\xa8\x46\x87\xa2\xe7\x58\x0f\xf0\xd9\x8b\x76\x24\xd7\xa2\xa2\xde\xfb\x91\x2a\x4d\xd1\xd6\xbd\xdf\x30\xa0\xe6\x77\xd4\x8b\xc2\xd6\x8f\x72\xbd\x95\x34\xc1\xb6\xfb\x9e\x1b\xdd\x14\x72\xd7\xf0\x9c\x73\x26\xb9\x86\x17\x26\x2f\x8c\x26\xd1\x8c\x50\xe5\x1e\x42\x8c\xd8\xe4\x58\xb2\xd9\x99\x3a\x68\x19\x3d\xdf\x09\x95\x51\x69\x7d\x84\xe2\xf8\xf7\x9c\x06\x88\x86\x04\x43\xaa\x45\x21\x2b\x0a\xe2\xdc\xb5\x89\xe0\xda\x9a\x8d\x45\x47\x25\xc2\x18\x38\x75\x93\xce\x4d\xa1\x34\x08\xf0\x56\x68\xc7\x02\xa1\x4a\x82\x64\x3a\x9a\xd7\x7e\x8f\x1b\x2b\xe4\xbe\x88\xa6\x68\xd7\x71\x21\x24\x95\x3d\xe3\x3f\xea\xb7\xb4\x52\xa3\xb3\x8a\x2c\x69\xa7\x24\x7d\x18\x66\xe5\x65\xab\x04\xa3\x67\xbf\x42\x9b\x74\xd1\xda\x5c\x63\x72\x0e\x24\x7a\xa1\x32\xc7\x86\x64\x34\x82\xa0\x7a\xa2\xed\x91\xd5\x1e\x33\x8a\x95\x2c\xc1\x76\x47\xef\xf9\xf5\x6b\x68\x76\xb5\x23\x58\xad\x56\x70\x4b\x8f\x9d\xb7\x65\xc2\x01\x99\xe2\x94\xa6\x15\xa6\xdc\x92\xb7\x53\x65\x59\xe9\x88\x09\xaa\x7f\x79\xa9\x50\xe7\xfd\x21\x49\x28\x84\xdf\x42\x14\xfc\x21\xea\x7c\x2d\x02\x78\x65\x2c\xe0\x93\xc8\x8b\x6c\x22\xf9\x20\xf1\xc1\x2b\x63\x6a\x68\x08\x8c\xfd\x9d\x5f\x5d\x5e\xc2\xbb\x7d\xa4\x30\x31\xe9\xa1\x6e\x21\x50\xe2\x37\x4a\x32\x35\xe6\x99\xdb\x43\x15\x8c\x1a\x82\x3f\x68\xf3\xa8\xc7\x58\x65\x3e\xc8\x17\x47\x49\xde\x2d\x5a\x8f\xba\x5b\x2c\xe1\x6e\xd1\xb3\xff\xbb\xba\x61\x77\xb7\x68\x6c\xf4\x6e\xd1\x4c\xf7\x6f\x05\xd9\xe0\x1b\xb4\x1b\xfc\x01\xab\x6f\x69\x92\x71\xfa\x7b\xe3\x6f\x28\x6e\xe0\xa6\xfa\x36\xa7\x0f\x5b\x5a\x99\x72\xfe\xb6\x2a\xf0\xdb\x5c\x14\x7b\x0f\xdf\x88\xe2\x38\xf5\x1e\xb0\x7d\xb8\xcf\xd1\x8b\xdd\x55\xd4\x19\xde\x5f\x7f\x72\x46\xaf\xef\x16\x9d\x44\x96\x26\x27\xf3\x2d\x7c\x75\xb7\x18\xa5\xba\xc7\xea\xfa\x6e\xc1\xcc\xde\x2d\x60\x6f\xc9\xeb\xbb\x05\xb1\x45\x8f\xad\xf1\x26\x2e\xd3\xf5\xdd\x22\xae\x3c\xba\xe5\xd5\xd2\x62\xb1\xd4\x22\xc7\x6f\xbb\x59\xef\x16\x7f\x1d\x5f\x82\x6e\x56\xcc\x09\x44\xb0\x3b\x07\xff\x18\x63\xed\x48\x8b\xa1\x3e\x0b\x20\xc7\x34\xbd\x82\x4c\x38\x7f\xdb\x42\xd2\xad\xca\xc7\x44\xba\x82\x1c\x9d\x1b\xcf\x04\x56\x84\x95\x6e\x34\xaa\xae\xea\x90\x31\xfa\x6a\x42\x7b\xc7\x9a\x21\x87\xfc\x9e\xd4\x5a\x3a\xfc\xac\xc9\x1a\xe9\x4d\x57\x5e\xb4\x9a\x99\x2e\x85\x5a\x2a\x04\x22\xd6\xe4\x8c\x57\x75\x2c\xf7\x94\x90\xb3\xc6\xa2\x1a\x78\xda\x5c\xf1\x71\xff\xf0\xc6\x80\xe8\x16\xa1\xd4\x12\x6d\x56\x51\x54\xe8\x62\x66\xb2\x15\x7a\x83\x32\x82\x90\x9a\x8a\xb6\xa8\xe0\x93\x2a\x9c\x95\x4e\x53\xed\x3a\x81\xbc\x3e\xe2\x80\xef\x08\x24\x03\x90\xd5\xe4\x9b\xbd\xa6\xc2\x93\xc7\x7f\x86\x1d\x14\x29\x3c\xae\xfc\xb8\x31\x41\x63\x4c\x27\x29\xae\x1e\x1b\xce\x14\x6c\xcb\x5c\x68\x8e\xcd\x1c\xa8\xdb\x77\xa1\xcd\x35\x57\xc0\x36\xf1\x45\xc4\xa6\xac\x3b\x38\xad\x1e\x6b\x55\xe5\xa2\x22\x3d\xb5\x1d\xcf\xf9\x04\xfd\x04\x61\xe4\xe2\xe9\x47\xd4\x1b\xbf\x5d\xc3\xd7\x5f\xfd\xc7\x37\xbf\x19\x1d\x16\x20\x1e\xe5\x7f\x85\xcd\xe5\x83\x03\x2e\x13\x62\x39\xfc\x6c\x98\x65\x46\xcd\x39\x81\x68\xd3\x8e\x99\xb1\xbf\x3a\xbe\x75\x96\xf7\x28\xc2\xf6\x6c\x2c\x1c\x4a\x28\x0b\x92\x13\x45\x37\xa5\x9d\x17\x3a\xc1\x25\xa8\xf4\xe3\x26\x51\x6d\x90\xca\x2a\xb8\xfa\x6a\x09\x71\xad\x8a\xc3\xf0\xf4\xe1\xe9\x3e\x3a\x5c\xe2\x1c\xe5\xdf\x2e\x07\xfc\x2b\x07\xa4\x6a\x93\xb2\x31\xc2\xa3\xf2\x5b\xb0\x18\xd2\x8a\xfa\x88\xce\x5c\x5a\x01\xfb\xa9\x05\xb6\xeb\x9e\x37\x88\xf9\x32\xf8\x94\x12\x38\x57\x5a\xe5\x65\xbe\x86\x2f\x47\x07\x04\xb0\x3d\xc9\x46\xc2\xd0\x2e\xc7\x12\x04\xae\x1b\x2b\xf2\x5c\x78\x95\x80\x92\xa8\xbd\x4a\x15\xda\x53\x1c\x28\x1c\xec\x62\x82\xcd\x39\xaf\x56\xd6\xcf\x5c\x8d\xa2\x3d\x97\xba\xb6\x46\x96\x09\xda\xe9\x9a\xdb\xa4\x4d\xd3\x38\x39\x28\x12\xc8\x17\xc3\x7e\x12\xe0\x13\xa9\xac\x3d\x0f\x45\xa9\xc7\x24\xc9\x1c\x05\x65\xd5\xae\xab\x47\x18\xe6\x42\xbe\xf2\xb8\x45\x0e\xa5\x6d\x21\x1f\xda\x7f\x89\xd1\x4e\x49\x1c\x4f\x97\xc3\x25\x60\x53\x0a\x2b\xb4\x47\x94\x04\x9e\x61\x97\x64\xd8\x0c\x10\xdd\x99\xa1\xa3\xc5\xfd\x6d\xd7\x70\xa2\xa5\xd6\xe7\x8f\x18\x77\x3e\x0f\xe0\x5c\x7d\xf9\xd5\x8c\x81\xb5\xa3\xa6\x76\x24\x84\xf7\x68\xf5\x1a\xfe\xfb\xc3\xf3\xd5\x5f\xc4\xea\x6f\xf7\xe7\xf5\x8f\x2f\x57\xbf\xfd\x9f\xe5\xfa\xfe\x8b\xde\xed\xfd\xc5\x77\xff\x3a\x99\x99\x0f\xcb\xe3\xee\xda\x33\xd5\xae\x14\xde\x33\xac\x25\xc7\x56\x93\xc2\xad\x2d\x71\x09\xaf\x44\xe6\x70\x09\xf5\x31\xcd\x4f\x10\x14\xea\x32\x9f\xe2\x6b\x05\x0b\x9a\x6d\x3c\x07\xe4\xd7\xcc\xc6\xf4\xfb\x9a\xbd\xe9\xbd\xb2\x53\x04\xc2\xe9\xb9\x49\xfb\x78\xd6\x3b\x93\x06\x8c\xc3\x94\xf8\x47\x75\xb1\x11\x25\x26\xbf\xec\xce\xac\x4d\x1a\x1e\x55\x44\x6f\x84\xae\xa0\x03\xdb\x50\x0a\x0c\x3d\xc2\x79\x2a\x26\x44\x62\x8d\x73\xed\x41\xbd\x69\x67\xce\xd4\x03\x76\x55\x78\x80\xf6\x18\x13\xc1\x65\x94\x8d\x95\xb7\xc2\x56\xbd\xb6\x04\xb7\xb7\x63\x3e\xda\x91\x96\xd3\xcd\xca\x73\x87\x08\x91\x36\x12\x0f\x63\xc4\x45\x40\x7c\x11\xab\x4c\xf9\x2a\x1c\x55\xa0\xf2\x36\xe3\x56\xe6\x34\xab\x2a\x2f\x8c\xf5\xa2\x39\xc9\x60\x71\x83\x4f\xa0\xba\x5d\x42\xe5\xe0\x5c\x6a\x77\x75\xf5\xd5\xd7\x37\x65\x2c\x4d\x2e\x94\x7e\x95\xfb\xcb\x8b\xef\xce\x7f\x2e\x45\xc6\x9b\x5c\x6f\x45\x8e\xaf\x72\x7f\xf1\x79\x92\x83\xab\x6f\x8e\xfa\xe1\xf9\x87\xe0\x6d\xf7\xe7\x1f\x56\xf5\xaf\x2f\x9a\x47\x17\xdf\x9d\xdf\x45\xb3\xef\x2f\xbe\x20\xee\x7b\x3e\x7c\xff\x61\xd5\x39\x70\x74\xff\xc5\xc5\x77\xbd\x77\x17\x43\x77\xee\x62\xfb\xb1\x76\x52\x17\xab\x7b\x27\x77\x58\x33\x1e\x6d\x4e\x70\xce\x49\xa8\xd0\xdc\x2a\x00\x8d\x28\xc7\x14\xc5\xc7\xf4\xf8\x6c\xad\x4e\x54\x86\x92\xec\x7d\x2b\x5c\x97\xae\x6a\x10\xf0\x28\xea\xfd\x38\xa6\xc2\x9d\x55\x91\xb0\x41\xff\x0a\x3d\x8b\x6e\x61\x75\xe1\xfe\x80\x58\x38\x8a\x78\xc9\x43\x03\x5b\x9d\x98\x28\xfe\x8c\xaa\x54\xc0\x46\xed\x50\x77\x27\x5f\x9b\x3d\x1f\x89\x89\x72\x41\x6c\x9c\xa1\xa6\xc6\x26\x9c\x76\x49\xde\x7f\x08\xde\x32\x9e\x4c\x0b\x89\xed\xb6\x7d\x7d\x8a\x7f\x6f\xc7\xfb\x80\xf5\x10\x58\x59\x8a\x1b\xe5\xb7\x65\xcc\xe0\x61\x0a\xd4\x6e\xab\x52\x7f\x29\x0a\x75\xb9\x1b\x0b\x0d\x9f\x78\xcc\x2c\xfc\x21\xe0\x14\xf4\xe3\x91\x4d\x81\x16\x6e\x6a\x19\xf7\x8e\x0c\x0b\x0f\x95\x29\x9f\xd9\x71\xb1\x40\x28\xd5\x92\x87\x69\x17\x3c\xea\xa5\x94\xd4\x7c\x64\x5e\xbe\xff\xc9\x5e\x8d\xd9\x33\x8f\xc1\x62\xe6\xd3\xf2\xee\x9f\x01\x47\xb6\x9a\x3f\x4f\x06\xaa\x47\x0f\xdd\x8e\x2c\x55\x4f\x9c\xb9\x1d\x53\xd1\x27\xab\x62\xe6\x2c\xdb\x04\x6b\xed\x89\xb6\xc7\x2d\x5a\xfc\xc5\x9c\xc1\x74\x28\x39\xca\x74\x33\xdf\x89\xd9\x7a\xcd\x5c\x2d\xd2\x8e\xd9\x3a\x15\x38\x58\xc1\x24\xc7\x9f\x49\xe6\xbb\xb1\x3f\x5c\x4c\x70\x5f\x8f\x6d\x98\x6f\x6e\xff\x6f\xbd\xf6\x94\x5a\x7a\xff\x84\xc1\x61\x15\x3d\xe1\xb1\x21\xf2\x30\xeb\xbb\x31\xd6\x25\x8a\xcc\x73\x91\x39\x11\x7c\xa6\xdc\x72\xce\x21\xf9\x90\x03\xca\xa6\x9f\x7d\x2c\xf8\xbe\x1b\x0c\xdf\x8b\xc0\x21\x52\xf5\x95\xe1\xa6\x8c\x88\x3e\xab\xa7\x0e\x95\xf2\xfe\xbe\xce\xaf\x10\x5d\x07\x9c\xbf\x41\x2f\x86\xed\x8c\x7d\x13\x9a\xf0\xc9\x66\x63\x24\xae\xf8\xaf\x3b\xf5\x2e\xee\x3f\x23\xd9\xff\x67\x50\xf7\x7c\x22\x6f\xc0\xd1\x3f\x41\xfb\xd3\x41\x7b\x54\xb0\xa7\xb2\x15\x70\x75\x0d\xde\x96\xc1\xaa\x9d\x37\x56\x6c\xb0\xff\xa4\x8c\xed\x10\xd9\xea\x96\x01\xfc\xfd\x1f\x67\x5d\xf7\x20\x74\xa6\x43\xd1\xb5\xf7\x1f\xd1\x45\x28\xc2\x9b\xbf\x7f\xf2\x6d\x6f\xe7\x1b\x3e\xdc\x9f\x85\x89\x51\xbe\x6f\xfe\xc3\x49\x0f\xff\x37\x00\x00\xff\xff\x0d\xc9\xa7\xb6\x27\x3b\x00\x00")

func klusterletCrdsV10000_00_operatorOpenClusterManagementIo_klusterletsCrdYamlBytes() ([]byte, error) {
	return bindataRead(
		_klusterletCrdsV10000_00_operatorOpenClusterManagementIo_klusterletsCrdYaml,
		"klusterlet/crds/v1/0000_00_operator.open-cluster-management.io_klusterlets.crd.yaml",
	)
}

func klusterletCrdsV10000_00_operatorOpenClusterManagementIo_klusterletsCrdYaml() (*asset, error) {
	bytes, err := klusterletCrdsV10000_00_operatorOpenClusterManagementIo_klusterletsCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "klusterlet/crds/v1/0000_00_operator.open-cluster-management.io_klusterlets.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _klusterletCrdsV1beta10000_00_operatorOpenClusterManagementIo_klusterletsCrdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xeb\x6f\xe4\xb8\x91\xff\xee\xbf\xa2\xd0\x77\xc0\xd8\x7b\xdd\xf2\x7a\x73\xd8\x4b\xfa\xb2\x59\x4c\x26\x33\x87\xc1\xec\x4c\x8c\xb1\x33\x01\x32\xf6\x5d\x28\xa9\xd4\xcd\xb5\x44\x6a\x49\xaa\x6d\x25\xc8\xff\x7e\xa8\x22\xf5\x6a\x3d\xec\x79\xdc\x97\xe0\xfa\x83\xe1\x96\xa8\x52\xf1\xc7\xaa\x5f\x3d\xc8\x16\xa5\xfc\x80\xc6\x4a\xad\xb6\x20\x4a\x89\x0f\x0e\x15\x7d\xb3\xd1\xdd\xaf\x6d\x24\xf5\xf9\xe1\x22\x46\x27\x2e\x4e\xee\xa4\x4a\xb7\xf0\xa2\xb2\x4e\x17\xef\xd1\xea\xca\x24\xf8\x07\xcc\xa4\x92\x4e\x6a\x75\x52\xa0\x13\xa9\x70\x62\x7b\x02\x90\x18\x14\x74\xf1\x5a\x16\x68\x9d\x28\xca\x2d\xa8\x2a\xcf\x4f\x00\x94\x28\x70\x0b\x77\x79\x65\x1d\x9a\x1c\x9d\x8d\x74\x89\x46\x38\x6d\xe8\x1f\xb5\x49\xfc\x9d\x4d\x21\x94\xd8\x61\x81\xca\x45\x52\x9f\xd8\x12\x13\x92\xbb\x33\xba\x2a\xb7\xf0\x94\x47\xfc\xab\x2c\x3d\x05\xe0\x55\x7f\xd3\xbe\x95\x2f\xe6\xd2\xba\x37\x47\x37\x7e\x92\xd6\xdf\x2c\xf3\xca\x88\x7c\xa0\x29\x5f\xb7\x52\xed\xaa\x5c\x98\xfe\x9d\x13\x00\x9b\xe8\x12\xb7\xf0\xc2\x5f\xa3\x0b\x55\x6c\x02\x46\x41\x07\xeb\x84\xab\xec\x16\xfe\xfe\x8f\x13\x80\x83\xc8\x65\xca\x10\xf9\x9b\x34\x91\xe7\x97\xaf\x3f\xfc\xea\x2a\xd9\x63\x21\xfc\x45\x80\x14\x6d\x62\x64\xc9\xe3\x7a\x5a\x82\xc1\xd2\xa0\x45\xe5\x2c\x24\x5a\x39\xa3\xf3\x1c\x8d\x05\xad\xc0\xed\x11\x3c\x10\x29\x04\x60\x22\xf8\xf3\x1e\x55\x90\x08\xf4\x40\x26\x77\x95\xc1\x74\xcd\xa3\x07\x62\x7f\xa9\xa4\x41\x0b\x02\x2c\x26\x06\x1d\x63\x98\x82\xce\x20\xd6\xda\x59\x67\x44\xb9\xd9\x57\xf1\xe6\xae\x8a\xd1\xcb\x69\xc5\x4a\xff\x6e\x2b\x0a\xf4\xc8\x97\x22\x41\x70\x1a\x44\x9e\xeb\x7b\x78\x7e\xf9\x9a\xc5\xa3\x75\x96\xae\xd2\xd8\x7d\x15\x43\xa6\x0d\xff\x6f\x70\x27\x49\x3e\x9b\x52\x23\xb3\x34\xda\xe9\x44\xe7\x51\xb8\xe2\x6a\x02\x59\xc7\x3f\x63\xe2\x4e\xda\x21\x25\x1a\x27\x1b\x94\xe9\xd3\xb3\xe8\xf6\xda\x11\x96\xcf\x08\x6c\x3f\x06\x52\xb2\x61\xb4\xac\xc6\xc1\x5f\xc3\x14\x2c\x2f\x04\x4d\xdd\xed\xa5\xed\x10\x1f\x6a\xc8\x6b\x97\x81\x50\x41\xab\x08\xae\xd0\x90\x10\xb0\x7b\x5d\xe5\x29\xa1\x7d\x40\x43\xd0\x26\x7a\xa7\xe4\xdf\x5a\xc9\x2d\x0a\xb9\x70\x68\xdd\x40\xa2\x54\x0e\x8d\x12\x39\x99\x49\x85\x6b\x10\x2a\x85\x42\xd4\x60\x90\xde\x01\x95\xea\x49\xe3\x21\x36\x82\xb7\xda\x20\x48\x95\xe9\x2d\xec\x9d\x2b\xed\xf6\xfc\x7c\x27\x5d\xe3\xc3\x89\x2e\x8a\x4a\x49\x57\x9f\xb3\xbd\xc8\xb8\x72\xda\xd8\xf3\x14\x0f\x98\x9f\x5b\xb9\xdb\x08\x93\xec\xa5\xc3\xc4\x55\x06\xcf\x45\x29\x37\xac\xb8\x72\x4c\x04\x45\xfa\x2f\xad\x31\x3f\xeb\x69\xea\xd7\xc3\x3a\x23\x55\x67\x08\xec\x6b\xb3\xb8\x93\xc3\x81\x64\x0b\xe3\xc7\xbc\xfe\x1d\xbc\x74\x89\x50\x79\xff\xf2\xea\x1a\x9a\x97\xf2\x12\x0c\x31\x67\xb4\x7b\x7e\xd0\x01\x4f\x40\x49\x95\xa1\xf1\x0b\x97\x19\x5d\xb0\x44\x54\x69\xa9\xa5\x72\xfc\x25\xc9\x25\xaa\x21\xe8\xb6\x8a\x0b\xe9\x6c\xdf\x4a\x23\x78\x21\x94\xd2\x0e\x62\x84\xaa\x4c\x85\xc3\x34\x82\xd7\x0a\x5e\x88\x02\xf3\x17\xc2\xe2\xff\x39\xec\x84\xb0\xdd\x10\xa4\x8f\x03\xdf\x27\xe0\xe1\xc0\x81\xc7\x00\x34\x6c\x3a\xb9\x42\x57\x25\x26\x7d\x7e\x21\xb4\x52\xb4\xd2\x60\x0a\x29\x96\xb9\xae\x89\x61\x5b\x16\x61\x77\x20\x17\x38\x22\xd7\xd6\x17\x77\xc4\xc7\x8f\x69\x34\xed\xc7\xf4\x09\x1c\xf6\x8e\xc2\xc6\xe0\xc6\x91\xda\x2f\xba\x71\x64\x5e\xa4\x35\xb1\x90\xf7\xdf\x11\x25\x92\xef\xc5\xe8\xc3\x14\xa6\x47\x72\x81\x78\x74\x5f\xc5\x11\x5c\x0f\xe9\x91\xe7\x02\x3b\x54\x14\x7d\x98\x25\x8d\x50\xa9\x2e\xfc\x9b\x64\x06\xd2\xd1\xbb\x95\x76\x23\x89\x16\xdd\x1a\xb4\x81\x54\xda\x44\xb3\x99\x92\x56\xa2\xa4\x69\x1b\x29\x1c\xb6\x9a\x79\xad\x15\xfc\xb1\x44\x75\xb5\x97\xd9\x00\xbc\xd9\xb5\xa7\x0f\x45\x6e\x62\x0d\xef\x08\x7f\x7a\xff\x93\x5d\x44\xec\xe5\x68\xf8\xf1\xb2\x0b\x0e\x91\xcc\x6f\xa5\xb4\x3c\x0c\x2a\x93\xdb\xd1\xec\x88\x9f\x12\x01\x71\xa5\xd2\x9c\x89\x54\x30\x10\x22\x49\xd0\x5a\x19\xe7\xd8\xea\x96\xd7\xf0\xba\xc1\xc9\xa2\x03\x2c\x4a\x57\xaf\x9b\xe5\x19\x09\x6e\x40\xd9\x0b\x82\xb5\x2f\xa5\x27\xbb\x32\xb9\x7f\x25\xc5\x93\xe6\x89\x44\x28\x38\x48\x2b\x67\xe0\x13\xc6\x88\xfa\xe8\x8e\x74\x58\x8c\x20\x3b\xf6\x8e\x06\xac\x11\x56\x7d\x84\x86\x80\x8c\x24\xc2\x32\x42\xa3\xf1\x33\x2e\xe3\x3f\x73\x8e\x13\x00\x14\xbf\x67\x1d\xa6\xee\x1d\x7b\xd0\x73\x3f\xb4\x71\x9f\x56\x7f\x72\x96\x44\x2b\x45\x84\x4b\xf1\xbc\x99\xe9\xa4\x48\x98\xf1\xb8\x08\xae\x6a\xeb\xb0\x80\x04\x8d\xb3\x20\x0c\x42\x65\x31\x1d\x78\x0d\x59\xc4\xf1\x72\xf5\x11\x98\xb0\xf9\xe6\x93\x69\x53\x08\xb7\x85\xb8\x76\x53\x78\x57\x26\x7f\x02\x02\xb4\xac\x61\xf2\xb4\x88\x03\xbb\x6f\xa3\xc7\x70\x7a\x33\x18\x34\x93\xfe\xb4\xc9\xb4\x69\xd3\xa2\xdf\xbe\x6b\x93\xab\x1e\xcf\xb5\xd9\x96\xa7\x68\x6f\x92\x4c\xbd\x4c\x62\xed\x90\x91\x42\x45\x65\x1d\xec\xc5\x81\xbc\xbd\x34\x98\xc9\x07\x9a\xe1\x6a\x26\xb1\xde\xac\x7c\x32\xf2\x38\xd7\x0d\x15\x5b\x12\xc9\x6a\xae\x48\x18\x1b\x44\x3b\x87\x31\xcb\x1c\x87\x92\x65\x30\x75\x8a\x97\xb9\x48\xf8\x25\xcb\x80\xf6\x47\x02\x2a\x11\x13\x89\xe1\x43\x99\xcb\x44\xba\x26\xc1\x06\xa2\x6d\x9f\xe2\x26\x7b\x4c\xab\x7c\xca\x14\x83\x71\xf8\x09\x60\x0a\xa5\x4e\xed\xb4\xc6\x93\xde\xbc\xe4\xcb\x34\x9f\x2b\xcc\x31\x71\xda\x4c\xd9\xf2\x68\x4a\xcd\xe0\x36\xbf\xbd\xdf\xcb\x64\xcf\xb7\xbc\xdd\x5c\xea\xd4\x3b\x62\x98\xd0\x8c\x35\x6b\xe5\x6d\x28\xc5\x4c\x54\xb9\xa7\x2d\xe5\x89\x9b\xe3\xc3\x94\x91\x2f\x32\x16\x80\x48\x53\xae\x19\x45\x7e\xb9\xc8\x5e\x8f\x38\xbe\xd3\x39\xfa\x04\x64\xf2\xe9\x01\x22\xd7\xdd\x58\x9e\x81\x73\x82\x66\x0d\x71\xcd\x8b\xc4\xc9\xb8\x1f\x82\x20\x54\x0d\x4e\x48\x35\xa5\x7a\xe0\xee\x42\xb8\x64\x1f\x70\x74\x46\x96\x39\xc2\x6f\xef\xb0\x5e\xfb\x84\x1d\xb3\x0c\x13\xf7\x3b\xa8\x6c\x93\xce\xf2\xf8\x39\xf2\x6a\xca\x59\xf8\x6d\xf3\xdf\xef\x3e\x17\xf2\xa9\xb8\x06\xf3\xb1\x6d\x0c\xd3\x1e\x09\x0f\x9f\x3a\x77\x98\x0d\x20\xeb\x41\x35\x4e\x05\xfc\xa7\x45\xf0\xb3\xd0\x9a\x11\xda\x60\x38\x89\xd7\x82\xf5\xcc\x9a\xe1\x63\xc1\x93\x3e\x5e\xb9\xb9\xbb\xc7\x29\x15\x0f\x06\xa9\x52\x99\x70\x86\xc8\x13\x66\x1c\xbc\x1c\xc2\x8e\xa7\x11\xc1\x4b\x5a\xcd\x59\xb1\x94\xcd\x0b\x65\xfd\x60\x2a\xa1\x07\x62\xac\x2f\xe9\x39\x91\x97\x99\xa4\x4a\x9e\xab\xec\xb6\x1c\x5c\x90\x4b\x0e\xff\x4e\x5f\x05\x97\x5f\xc3\xa5\xc1\x0c\x4d\x77\x85\xf9\xfd\x9d\x7e\xf9\x80\x49\xe5\x70\x1a\x57\x78\x4a\x48\x06\xb8\xc3\xfa\x89\xc0\xbd\xc1\xba\x89\x66\x7e\x9e\x77\x58\x7b\xd3\xe1\x4b\x9d\x1d\x8a\xb2\xcc\xe5\xe2\xfc\xa8\x6a\x63\x6c\x67\x10\xbc\xc3\xda\x46\x94\x84\x92\xe4\x3b\xff\x5e\x9f\x85\x2e\x08\x6d\x2d\x8e\xc3\x65\x8c\xf0\xf2\x41\x5a\x67\xff\xd3\xfb\x49\xa2\x8b\x58\x2a\xaf\xa0\x7f\x69\xb3\xcc\x4b\xeb\x90\x87\xf2\xde\x32\xe2\xf4\x95\x55\xfb\x12\xc0\x1b\x35\x9f\x88\xfa\x1f\x9b\x59\xf5\x72\x59\x41\x5a\x3c\xa3\x52\x20\xf7\x6c\xb9\x97\x65\xe8\x54\x2c\x4c\x86\x27\x12\xc1\x07\x91\xcb\xb4\xd5\xc2\x07\x17\x8f\x14\xcf\xf1\xe5\x2f\x95\xc8\x23\xf8\x83\x67\x35\x42\x69\x41\x64\x18\x1c\x1e\xa7\x45\xfa\xa5\x92\x07\x91\x53\x8c\x76\x1a\xee\x65\x9e\x26\xc2\xa4\xdc\x40\x0a\x6d\x12\xab\xd9\x66\x96\x40\x67\x72\xa3\xda\xa0\x23\xfb\xc6\x32\x2c\x27\x7c\x50\x0a\xe3\x64\x52\xe5\x82\x6a\x08\x87\x3b\x6d\xea\x2f\x5a\x93\xce\x78\xaf\x30\xd1\x2a\x9d\x65\x9a\xd9\x80\x15\x9e\x3b\xae\x38\x4a\x34\x52\x73\x6f\xce\xc9\x62\x69\x71\x8e\x5c\xe8\xd4\xe7\x01\x8d\x25\xeb\xac\xe1\xa6\xd6\xe9\xd7\xa0\xdd\x1e\xcd\xbd\xb4\xcb\x62\xa5\x85\x4c\x62\xce\xfd\x1c\xb9\x53\xda\x60\x7a\xd6\x85\x86\xce\x9b\x23\xf8\x7d\xdd\xc4\xb2\x25\x2f\x1b\x14\x02\xeb\x90\xaf\x34\x0e\x15\x96\xab\xa3\x88\x4c\x1b\xa4\x94\xec\x34\x5d\x32\x23\x92\x86\x07\x99\xb8\xb3\x08\xfe\x82\x46\xb3\x21\x2a\xdc\x09\x27\x0f\xd8\x38\xe0\xbd\xcc\x73\xc2\xc2\xf9\x7e\x00\x88\x25\x82\xf9\x16\x4e\x59\x20\xc8\xa2\xc0\x94\x6a\xf7\xbc\x3e\xa3\x3c\x82\x73\x43\x2e\x72\x1e\x33\x18\xa9\x1c\xee\x66\x0b\xa8\xae\x9a\x91\xca\x7d\xff\xef\x33\xa3\x58\xf5\x27\xda\xd2\x07\xee\xb1\x0d\x08\xd6\xb7\xdd\x8e\x4c\x23\xc4\xe9\x47\xd8\x35\x70\x67\xcb\x89\xd2\x06\x2f\xf5\x59\xbf\x97\x1c\xda\x9f\x31\x3e\x81\x5c\x1b\x63\x83\x9f\xc9\x26\x05\x18\xe4\x16\x7b\xf0\xab\xcf\xf0\xbe\x7e\x33\xf9\x75\x21\x76\x78\x59\xe5\xf9\xd5\x51\xd7\x6b\x84\xd2\xfb\xb9\xa7\xe6\xda\x61\x92\x06\x8d\x7b\x16\xc7\x9d\xb1\xbe\x36\x9f\x58\xc4\xdc\x6b\x73\xf7\xf4\x09\xfc\xf9\x78\xf4\xa2\xe2\x43\x45\xa7\x4a\x19\x7a\xfb\x27\x28\x1c\x36\x38\x66\x1b\x8b\x7c\xfb\x58\xa5\xa4\x32\x86\x28\xdd\x3f\x3c\x6c\x24\x7e\x79\xf3\x50\x2b\x5f\x68\x2c\x77\xc2\x9e\xbd\x68\xc7\x71\xb5\x27\xc2\x5e\x46\x2a\xb3\x0c\x4d\xe8\x76\xfa\x01\x41\x4f\xb4\xe4\xa3\xe3\x82\x84\x28\xb1\xd3\xbf\x09\x88\xdd\xd3\xdc\xce\xa5\xb0\xb8\x85\xe7\x9c\xc9\xa4\x5b\x78\xa1\x8b\x52\x2b\x06\x84\xea\xf0\x91\xd0\x18\xb1\xc9\x7b\xd2\x66\x97\x65\xd4\x5c\x79\x7e\x10\x32\xa7\xc2\x75\x20\xcf\x8f\x1e\xd7\xfc\x47\xcd\x50\x0a\xd3\xa2\x11\xc0\x04\x69\x50\xa4\x35\x85\x59\xee\x7e\x44\x70\x69\xf4\xce\xa0\xa5\x04\xbd\xff\x82\x91\xe4\x69\xf5\xf8\x05\x52\x81\x00\x67\x84\xb2\x0c\x05\xe5\xf1\x84\x25\x52\x3e\xb0\x33\x22\x1d\x42\xf1\x54\xc9\xa9\x66\x86\xf7\x49\x5e\xdf\xc4\x87\x5e\x28\xd4\x54\x93\x37\xaf\xc9\x72\x0e\x32\xa5\xc7\xbc\x0e\x3c\x61\x99\x60\xf4\xec\xab\xb6\x0d\x57\xad\x85\x35\x06\x66\x21\x45\x27\x64\xce\x86\x04\x5a\x21\x08\xca\xe6\xdb\xfe\x52\xf0\x8b\x09\xee\x63\xd4\xda\x7d\xa9\xe7\x97\xaf\xa1\xd9\x8c\x8d\x60\xb3\xd9\xc0\x35\x5d\xb6\xce\x54\x09\x87\x53\x8a\x35\x8a\x66\x96\x71\xfb\xd9\x4c\x97\x42\x95\x25\x05\xa8\xca\xe4\x29\x42\xc8\xbc\x7d\x78\x2f\x85\xdb\x43\xe4\x2d\x3f\xea\x7c\x2a\x02\x78\xa5\x0d\xe0\x83\x28\xca\x1c\xa7\x18\x9e\x40\x83\x57\x5a\x07\xd7\xf7\x4a\xfd\x9d\x6f\x9d\x9f\xc3\xfb\x21\x13\xe8\x98\xb0\x0f\x25\x3a\xa7\x62\x99\xd6\xcf\xa6\x82\x51\x9f\x33\x30\x6a\xc4\xbd\x51\xfa\x5e\x4d\xa9\xc9\x5a\xb0\xcf\xdd\xac\x5a\x3f\xb9\x59\x4d\x29\x7c\xb3\xea\x59\xfa\x4d\x68\x76\xdd\xac\x1a\x0b\xbd\x59\x35\x2f\xfb\xb7\x92\x2c\xee\x2d\x9a\x1d\xbe\xc1\xfa\x07\x7e\x85\xbf\x35\x21\xd5\x0f\xbe\xa2\x10\x80\xbb\xfa\x87\x82\x9e\x6a\x05\x51\x3d\x7f\x5d\x97\xf8\x43\x21\xca\xc1\xc5\xb7\xa2\x6c\x44\x4f\x69\x4a\x7f\x7a\xbc\xf5\xf1\xb6\x40\x27\x0e\x17\x51\x67\x69\x7f\xfd\xd9\x6a\xb5\xbd\x59\x75\x50\xac\x75\x41\xd6\x5a\xba\xfa\x66\x35\x21\x73\xa0\xe6\xf6\x66\xc5\x8a\xde\xac\x60\x30\xd7\xed\xcd\x8a\x54\xa2\xcb\x46\x3b\x1d\x57\xd9\xf6\x66\x15\xd7\x0e\xed\xfa\x62\x6d\xb0\x5c\x2b\x51\xe0\x0f\xdd\x3b\x6f\x56\x7f\x9d\x52\x5f\x35\x73\xe5\xe8\xef\x0d\xcd\xc2\x3f\xc6\x6a\x2d\xd6\xf0\x61\xc3\x3a\x1d\xbb\xdf\x06\x72\x61\xdd\x75\xcb\x37\xd7\x53\x39\xf2\x06\x0a\xb4\x76\x2a\x88\x6f\x88\x02\xed\x44\x58\xdc\x84\x08\x30\x71\x63\x72\xa5\x96\x3b\x0c\x63\x1d\x9f\xd0\xa3\x19\x3f\xd4\xa4\x76\x74\x87\xab\x01\x4f\x21\xcd\x1a\xcc\x55\x26\xad\x0c\x62\x07\xa3\x0b\xa6\xa1\x10\x88\x1d\x65\xca\xbc\x36\x51\x60\x94\x36\xa1\xbb\xef\x9f\x26\x38\x12\xb9\x47\xa8\x54\x8a\x26\xaf\x89\xe0\xbb\xc0\x97\xec\x85\xda\x61\x1a\x81\xcf\x1e\x45\x9b\xe9\xdf\x91\xd7\x72\xe2\x38\x27\xb3\x6b\xa2\xf1\xcc\xe8\xed\xfc\x8d\x98\xcf\xf3\x53\x10\xde\x6c\xa8\x94\x8e\x1c\xfc\x0b\x37\x12\x52\xe1\x70\x33\x53\x58\x05\xa3\x79\xc2\x52\x85\x91\x7e\xc3\x7b\x5f\x15\x42\x71\x68\xe5\x38\xdb\xde\xf3\xdd\x22\x9a\x64\x08\x09\x73\x4d\xb5\x58\x57\xa1\x21\xd2\xae\x5c\x58\x9c\x42\xd4\xb4\x32\x6d\x93\x70\x29\x73\x7e\x14\x82\x42\x3c\xfc\x84\x6a\xe7\xf6\x5b\xf8\xd5\x77\xff\xf1\xfd\xaf\x27\x06\x79\xae\xc6\xf4\xbf\xfc\x5e\xe8\xd1\x49\x8b\x19\x30\xc6\x0f\x1d\x27\x83\x51\xb3\x85\x1d\xed\xda\x31\xb3\x96\x16\x42\x54\x67\x63\xf7\xc2\xef\x29\xc6\xc2\x62\x0a\x55\x49\xe8\x50\x80\x92\xca\x3a\xa1\x12\x5c\x83\xcc\x3e\xe5\x15\xd2\x36\x91\x26\xaf\xe1\xe2\xbb\x35\xc4\x01\xfe\x71\x8c\xf9\xf8\x70\x1b\x8d\xa7\x37\x2f\xf7\x37\xeb\x23\xdd\xa5\x05\x5a\x5c\x9d\xb1\xe1\xc1\xbd\x74\x7b\x30\xe8\x33\x82\x70\x4e\x64\x3e\x23\x80\x61\x56\x80\xed\x8c\x97\x0c\x60\xa9\x06\x7d\xbc\xfe\x2c\xa4\x92\x45\x55\x6c\xe1\xdb\x89\xdb\x9e\x3a\x9f\x60\x11\x7e\x60\x97\x12\x09\xa2\xcb\x9d\x11\x45\x21\x9c\x4c\x40\xa6\xa8\x9c\xcc\x24\x9a\x9e\x93\x2c\x30\x4f\x10\xd7\x1c\x29\x6a\xd1\x7d\x66\x03\x33\xf6\xdc\xe6\xd2\xe8\xb4\x4a\xf8\xd0\x54\x36\x07\xa9\xef\xae\x26\xa3\xfc\x9d\xbc\xcd\x6f\xaa\x00\x3e\xd0\x12\xb5\x7d\x57\x7f\x52\x07\x05\xa5\xb7\x73\x6e\xec\xd5\x6b\x7a\x27\x3e\xc5\xb8\xdf\x23\x87\xc1\xb6\x7e\xf6\xbd\xb3\x44\x2b\x2b\x53\xa4\x7c\x56\xc0\xae\x12\x46\x28\x87\xb3\x9b\x8e\xcf\x2f\x5f\xfb\x6d\x83\xe3\x0a\x5c\x74\x07\x56\x1a\x66\xf0\xb4\xe1\xe9\xb3\x98\xdc\x31\x80\xd0\x3c\x69\x2a\xf8\x2f\x27\x93\x8b\x6f\xbf\x9b\x35\xa6\x76\xcc\x74\x9b\x5e\x38\x87\x46\x6d\xe1\xbf\x3f\x3e\xdf\xfc\x45\x6c\xfe\x76\x7b\x1a\xfe\xf9\x76\xf3\x9b\xff\x59\x6f\x6f\xbf\xe9\x7d\xbd\x3d\xfb\xf1\x5f\x67\xd2\xe6\xea\x29\x5b\x20\x5d\x25\x3a\x30\xa2\x35\x47\x47\x9d\xc1\xb5\xa9\x70\x0d\xaf\x44\x6e\x71\x0d\x7f\x52\x1c\xc0\x3e\x13\x1c\x54\x55\x31\xad\xd1\x06\x56\xf4\x9e\xa9\x2c\x8d\x6f\xf2\xeb\xe7\xee\x06\xa5\xe6\x36\x89\x1e\x87\x80\xd3\x59\x9d\xf5\xf9\xa9\x77\xe8\x09\x98\x53\x29\x3b\x8f\x42\xee\x1f\x25\xba\x38\xef\x0e\x45\xcd\x58\x13\x15\x27\x6f\x85\xaa\xa1\x23\x4e\x9f\x9b\x1f\x5b\xbc\x75\x94\xdd\x8b\xc4\x68\x6b\xdb\x33\x60\x73\xee\x94\xcb\x3b\xec\xca\x5f\x4f\xd2\x31\x26\x82\x2b\x1a\x13\x4b\x67\x84\xa9\x7b\x9d\x00\xee\xfe\xc6\x7c\xfa\x20\xab\xf2\x19\xa1\xa7\x16\x11\x22\xa5\x53\x1c\x73\xfd\x99\xe7\x6e\x11\xcb\x5c\xba\xda\xef\x57\x53\xb5\x99\x73\x4f\x70\x4e\x4d\x59\x94\xda\x38\xd1\x6c\xc8\x1b\xdc\xe1\x03\xc8\x6e\x6b\x4c\x5a\x38\x4d\x95\xbd\xb8\xf8\xee\x57\x57\x55\x9c\xea\x42\x48\xf5\xaa\x70\xe7\x67\x3f\x9e\xfe\x52\x89\x9c\x77\x79\xde\x89\x02\x5f\x15\xee\xec\xcb\xc3\xfa\xc5\xf7\x8f\xf8\xd9\xe9\x47\xef\x4d\xb7\xa7\x1f\x37\xe1\xbf\x6f\x9a\x4b\x67\x3f\x9e\xde\x44\x8b\xf7\xcf\xbe\x21\xbd\x7b\x3e\x7a\xfb\x71\xd3\x39\x68\x74\xfb\xcd\xd9\x8f\xbd\x7b\x67\x43\x77\xed\xe2\xf2\x72\xd7\xa6\x8b\xb3\xbd\xe3\x24\xbc\x1a\x0e\x4d\x41\xe4\xcc\xa9\xa2\x50\x5c\xa1\x83\x42\x4c\x27\xb7\x1c\x62\xe4\xc3\x99\x2a\x91\x39\xa6\x64\xdb\x7b\x61\xbb\x94\x52\x81\x80\x7b\x11\x36\xa3\xbc\x0c\x41\x81\x26\x61\xf3\xfd\xaa\x4d\x82\x6e\x42\xa1\x5e\xbe\x43\x2c\x2d\x45\xad\xe4\xae\xa1\xa3\x0e\x1c\x8e\x23\x62\x62\x19\x77\xf2\x80\xaa\x3b\x3a\x19\x36\x45\xc8\x48\xa5\xf5\x60\x71\x1e\x99\x69\x93\x70\x9a\x94\x72\xb3\x3e\x78\x45\x21\xd2\x49\xff\x0d\xbb\xd1\xe1\xac\xf7\x60\x43\x77\xa4\xb6\x0f\x8d\x8c\xdd\x4e\xba\x7d\x15\x33\x3d\xe8\x12\x95\xdd\xcb\xcc\x9d\x8b\x52\x9e\x1f\xc6\x44\xff\x05\xa7\x9c\xfc\xb1\xf0\xc7\x79\x8d\xc7\x35\xc5\x92\xff\x12\x70\xed\x9d\x34\x15\x0e\x6a\x5d\x3d\x33\xe8\x91\x9f\x73\xa7\x47\xfc\x8d\x12\x8e\x4f\xca\x8e\x87\x0f\x0c\x2a\xba\xde\xa2\x1f\xa9\xbb\x94\x1c\x77\x07\xc3\x17\x77\x4d\xbf\x3c\x1b\x54\x13\x67\x33\x27\x26\xa8\x66\x8e\x66\x7e\x75\xe8\x67\x8f\x51\xcd\x28\xd5\x1e\xa6\xba\xdf\xa3\xc1\xcf\xd4\x09\xe6\xa8\xff\x11\x65\x9b\x37\x3d\x29\x5b\x0e\x4a\x05\x10\x3b\x25\x43\xb8\x1e\x69\x3e\xa3\xe9\x57\xc0\xf8\x30\x3e\x5f\x3f\xa3\x75\x18\xd9\x28\xdd\x7c\x5d\x58\xfc\xf9\x76\xc5\x67\xa8\xfb\x78\xa5\x3a\xdc\x12\x1f\xd7\xa8\x33\x9e\xe8\x23\x04\xab\x3c\xd1\xb4\x4f\x51\xe4\x8e\xcb\xb8\xc9\x10\x31\xed\x6e\xf3\x8e\xc6\xbb\xf1\x98\xbe\x1f\xfe\xa2\x64\x66\x0e\xef\x8f\x06\x0f\xa2\xa3\x8f\x26\x7d\xe8\xc3\x79\x5d\x31\x01\x7c\x78\xad\xaf\x40\x87\x5b\x1b\x5f\x35\xf2\x1d\x69\xfc\x16\x9d\x38\x6e\x0d\x0c\x0d\x85\x5b\x1e\x73\x07\x30\xe3\x9a\x7f\x8f\x11\xb6\x27\xff\xc9\xe3\xcc\x3f\x21\xf9\x3a\x3e\xe4\x75\xa4\xcb\xff\xd3\xeb\xb4\xd6\xcb\xf4\x3a\x09\xe5\x53\x14\x6a\x14\x00\x4e\xd4\xc2\x37\xf6\x89\x4d\xf8\x09\x5f\xc8\xe0\x3c\x5d\x6e\xc1\x99\xca\xf3\x87\x75\xda\x88\x1d\xb6\x57\xd8\x8b\xcd\x01\x43\x51\xfa\x8a\x1b\xfd\x5b\xc8\xa8\x80\x3d\xe9\x8a\x72\xdf\xb8\xf5\x35\xce\xe0\x47\x7b\x2b\x5f\xe5\x36\xbf\xc7\xe3\xaf\xbd\x7d\x5d\xf8\x78\x7b\xe2\x5f\x8a\xe9\x87\x46\x4d\xba\xf8\xbf\x01\x00\x00\xff\xff\xbb\x85\x8b\xe2\xd7\x38\x00\x00")

func klusterletCrdsV1beta10000_00_operatorOpenClusterManagementIo_klusterletsCrdYamlBytes() ([]byte, error) {
	return bindataRead(
		_klusterletCrdsV1beta10000_00_operatorOpenClusterManagementIo_klusterletsCrdYaml,
		"klusterlet/crds/v1beta1/0000_00_operator.open-cluster-management.io_klusterlets.crd.yaml",
	)
}

func klusterletCrdsV1beta10000_00_operatorOpenClusterManagementIo_klusterletsCrdYaml() (*asset, error) {
	bytes, err := klusterletCrdsV1beta10000_00_operatorOpenClusterManagementIo_klusterletsCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "klusterlet/crds/v1beta1/0000_00_operator.open-cluster-management.io_klusterlets.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _klusterletImage_pull_secretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xbd\x6e\xc3\x30\x0c\x04\xe0\x5d\x4f\x71\x48\xf7\x00\x5d\xb5\xba\x4b\x51\xf4\x07\x68\xd1\x9d\x95\x59\x47\x89\x45\x0a\x14\x5d\xc0\x08\xf2\xee\x85\xe3\x64\xf3\xcc\xef\x78\xf7\x80\x4e\xeb\x6c\x79\x38\x38\x3a\x15\xb7\xfc\x33\xb9\x5a\x83\x2b\xfc\xc0\x78\xaf\x2c\xe8\xc6\xa9\x39\x1b\x5e\x49\x68\xe0\xc2\xe2\xa8\xa6\x47\x4e\x1e\x02\xd5\xfc\xcd\xd6\xb2\x4a\xc4\xdf\x63\x38\x65\xe9\x23\x3e\x39\x19\x7b\x28\xec\xd4\x93\x53\x0c\x80\x50\xe1\x88\xdd\xf9\x8c\xfd\x73\xa1\x81\x3f\xa6\x71\x5c\xd9\x1b\x15\xc6\xe5\xb2\xbb\xa1\x56\x29\xdd\xe5\xcb\x5a\x3c\xae\xe8\x7a\xb9\x4a\x9f\x2b\x47\x6c\xfc\xfa\x9a\xeb\x22\xc2\xbd\x15\xd8\xf7\x9a\x4e\x6c\x49\xe5\x37\x0f\xc7\xb6\xcc\xdc\xc8\x3d\x91\xd3\x92\xfb\x0f\x00\x00\xff\xff\xc7\xa9\xa6\x5a\x0f\x01\x00\x00")

func klusterletImage_pull_secretYamlBytes() ([]byte, error) {
	return bindataRead(
		_klusterletImage_pull_secretYaml,
		"klusterlet/image_pull_secret.yaml",
	)
}

func klusterletImage_pull_secretYaml() (*asset, error) {
	bytes, err := klusterletImage_pull_secretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "klusterlet/image_pull_secret.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _klusterletKlusterletYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x41\x8f\xd3\x30\x10\x85\xef\xf9\x15\xa3\x65\x8f\x24\x88\x6b\x24\x4e\x15\x07\x84\x28\x2b\x2a\xc1\x79\xd6\x79\x4d\x4d\x1c\x8f\x35\x9e\x2c\x54\x55\xff\x3b\x72\x9d\x12\x04\xe4\x96\x79\xdf\xf3\x7b\x63\xbf\xa2\x9d\xa4\xb3\xfa\xf1\x64\xb4\x93\x68\xea\x9f\x17\x13\xcd\x64\x42\x76\x02\x7d\x4e\x88\xb4\x0b\x4b\x36\x28\x7d\xe2\xc8\x23\x66\x44\xa3\xa4\xf2\x1d\xce\x9a\x86\x93\xff\x0a\xcd\x5e\x62\x4f\x92\xa0\x6c\xa2\x9d\x24\xc4\xd6\x55\x57\x3b\xff\x76\x75\x5e\xde\xbc\xbc\x6d\x26\x1f\x87\x9e\x3e\x56\x39\xc0\x9a\x19\xc6\x03\x1b\xf7\x0d\x51\xe4\x19\x3d\x4d\x9b\x98\x13\x5c\x11\x14\xa3\xcf\xa6\x6c\x5e\xe2\x87\x99\x47\x3c\x2d\x21\x1c\x8a\x48\x97\x0b\x75\x5f\xfe\x96\xf7\x3c\x83\xae\xd7\x86\xe8\x87\xe8\xf4\x1f\xc7\xb7\xfb\x78\x23\xd7\xca\xfb\x5b\x87\x87\x02\xd5\x95\x87\xdd\x26\xe4\xc4\xae\xe0\x0f\x6b\xd9\xdb\xff\x4a\x6f\x3b\xfd\x43\xca\x80\xa7\xc0\xee\x76\x0f\x65\x9d\x3a\x3a\x20\xc0\x99\x68\x9d\x5c\x2e\x2d\x29\xc7\x11\xf4\x38\xe1\xfc\x9a\x1e\x5f\x38\x2c\xa0\xfe\x1d\x75\xfb\x3f\xe0\xda\xb5\x7c\x25\xb4\xa0\x25\xa4\x56\x58\x2d\x35\xb4\x9e\x88\x38\xdc\x1d\x26\x01\xf5\x8a\x72\x4d\x6c\x09\xc7\x23\x9c\xf5\xb4\x97\x83\x3b\x61\x58\x02\xd6\xb3\x27\x9c\xfb\x5b\xc7\x56\x25\xa0\x9b\x96\x67\x68\x84\x21\x97\x57\xf4\xf1\xa8\xbc\x82\xf7\x57\xef\xe9\xfd\x4f\x9f\x2d\x37\xbf\x02\x00\x00\xff\xff\x52\x9c\x6e\x69\x54\x02\x00\x00")

func klusterletKlusterletYamlBytes() ([]byte, error) {
	return bindataRead(
		_klusterletKlusterletYaml,
		"klusterlet/klusterlet.yaml",
	)
}

func klusterletKlusterletYaml() (*asset, error) {
	bytes, err := klusterletKlusterletYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "klusterlet/klusterlet.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _klusterletKlusterlet_admin_aggregate_clusterroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x31\x4f\xec\x30\x10\x84\x7b\xff\x8a\x95\x5f\xfb\x92\xa7\xd7\x21\xb7\x57\x50\x21\x24\x0a\x1a\x74\xc5\x26\x19\x25\xe6\x1c\xaf\xb5\x5e\x1f\x82\x5f\x8f\x92\xe3\xb8\x0a\x2a\x8f\x3c\x33\xdf\xce\x1f\x3a\x48\x79\xd7\x38\x2f\x46\x07\xc9\xa6\x71\x68\x26\x5a\xc9\x84\x6c\x01\x3d\x16\x64\x3a\xa4\x56\x0d\x4a\x0f\x9c\x79\xc6\x8a\x6c\x54\x54\x5e\x31\x9a\x73\x5c\xe2\x33\xb4\x46\xc9\x81\x74\xe0\xb1\xe7\x66\x8b\x68\xfc\x60\x8b\x92\xfb\xd3\x5d\xed\xa3\xfc\x3b\xff\x77\xa7\x98\xa7\x70\x45\x3d\x49\x82\x5b\x61\x3c\xb1\x71\x70\x44\x99\x57\x04\x92\x82\xdc\x8d\x97\x48\xb7\x7e\x5f\x0b\xa7\xcb\x57\x82\x75\x3c\xad\x31\x77\x3c\xcf\x8a\x99\x0d\xd7\xb4\x6e\x40\xa2\xc4\x03\x52\xdd\x80\xf4\xcb\x9a\x5b\xdb\xe4\x02\x0c\xe4\x4d\x1b\xbc\xd3\x96\x50\x83\xeb\x88\x4b\xbc\x57\x69\xa5\x06\x7a\xf1\x52\xa0\x6c\xa2\xfd\x0f\x03\xfb\x28\xfe\xe8\x88\x14\x55\x9a\x8e\xd8\x4b\xb7\xd1\x75\x37\xcf\xd0\x61\x37\x66\x98\xff\x4b\x3e\xc5\xba\xbf\x6f\x6c\xe3\xb2\x89\x51\xc1\x86\x4d\xb5\x32\x7d\xa9\x72\x35\x27\x24\x18\xfc\xf1\x33\x00\x00\xff\xff\xc6\xe5\x63\xd1\xb1\x01\x00\x00")

func klusterletKlusterlet_admin_aggregate_clusterroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_klusterletKlusterlet_admin_aggregate_clusterroleYaml,
		"klusterlet/klusterlet_admin_aggregate_clusterrole.yaml",
	)
}

func klusterletKlusterlet_admin_aggregate_clusterroleYaml() (*asset, error) {
	bytes, err := klusterletKlusterlet_admin_aggregate_clusterroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "klusterlet/klusterlet_admin_aggregate_clusterrole.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _klusterletNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xce\xb1\x4e\xc5\x30\x0c\x46\xe1\x3d\x4f\xf1\x2b\xec\x45\xac\x59\x3b\x22\x60\x63\x37\x37\xe6\xd6\x34\xb1\xa3\xc4\xa5\x42\x55\xdf\x1d\x21\xa4\x8e\x67\xfa\xce\x03\x66\x6b\x3f\x5d\xee\x8b\x63\x36\xf5\x2e\x1f\x9b\x5b\x1f\x70\x83\x2f\x8c\xb7\xc6\x8a\xb9\x6c\xc3\xb9\xe3\x85\x94\xee\x5c\x59\x1d\xad\xdb\x17\xdf\x3c\x04\x6a\xf2\xce\x7d\x88\x69\xc2\xf7\x53\x58\x45\x73\xc2\x2b\x55\x1e\x8d\x6e\x1c\x2a\x3b\x65\x72\x4a\x01\x20\x55\x73\x72\x31\x1d\x7f\x09\xec\xd6\xd7\x62\x94\x27\x6b\xac\x63\x91\x4f\x9f\xc4\x1e\xa9\x14\xdb\x39\x27\xc4\x7a\x79\x31\x00\x4a\x95\x13\xe2\x71\x60\x7a\xfe\x1f\x2a\xec\x97\x84\xf3\x8c\xe1\x37\x00\x00\xff\xff\x88\xe3\x41\xd4\xce\x00\x00\x00")

func klusterletNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_klusterletNamespaceYaml,
		"klusterlet/namespace.yaml",
	)
}

func klusterletNamespaceYaml() (*asset, error) {
	bytes, err := klusterletNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "klusterlet/namespace.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _klusterletOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x93\x41\x6f\x1a\x49\x10\x85\xef\xfc\x8a\xd2\xac\x25\x5f\x16\x58\xef\xfa\xb0\x6a\x29\x87\xc8\x8e\x12\x2b\x09\x46\xc1\xca\xbd\xe9\x79\xcc\x74\x68\xba\x5a\xd5\x35\x24\x04\xf1\xdf\xa3\x81\x61\x3c\xc4\xfe\x01\xe1\x84\xfa\xbd\xfa\x78\xfd\xaa\xf9\x8b\xee\x38\xed\xc4\x57\xb5\xd2\x1d\x47\x15\xbf\x6c\x94\x25\x93\x32\x69\x0d\x7a\x4c\x88\x74\x17\x9a\xac\x10\xfa\x6c\xa3\xad\xb0\x41\x54\x4a\xc2\xdf\xe0\x74\x34\x5a\xfb\x58\x1a\xba\x47\x0a\xbc\x6b\x95\x91\x4d\xfe\x2b\x24\x7b\x8e\x86\x6c\x4a\x79\xba\xbd\x19\x6d\xa0\xb6\xb4\x6a\xcd\x88\x28\xda\x0d\x0c\xad\x4f\xc8\x00\xed\x8e\x72\xb2\x0e\x86\x8a\xfd\x9e\x26\x1f\x7b\x71\x76\x56\xe8\x70\x28\x46\x44\xc1\x2e\x11\x72\x8b\xa1\x16\x7e\xc1\xc9\x09\xae\x55\x04\x29\x78\x67\xb3\xa1\x9b\x11\x51\x46\x80\x53\x96\xd3\xcc\xc6\xaa\xab\x3f\x0d\x20\x2f\x31\x44\x8a\x4d\x0a\x56\xd1\x8d\x0c\xb2\x1f\xfd\x31\xb2\x5a\xf5\x1c\x7b\x04\x91\x5a\xa9\xa0\x93\xef\x2c\xeb\xc0\xb6\x9c\x70\x42\xcc\xb5\x5f\xe9\xc4\xf3\x74\xd3\xd7\x66\xe8\x7a\x5f\x60\xb5\x82\xd3\xc2\x50\x31\x17\xac\x20\x82\xf2\xbe\x11\x1f\xab\x85\xab\x51\x36\xc1\xc7\xaa\x38\x5c\x77\xe8\x70\x91\xf5\xb5\xb4\x44\xe7\x8b\x1f\xbf\x43\xb6\xde\xe1\xad\x73\xdc\xc4\x63\x7d\x2f\xec\x44\x91\x4b\x2c\x2e\x7a\x21\xda\xef\xc7\x24\x36\x56\xa0\xab\x35\x76\x7f\xd3\xd5\xd6\x86\x06\x64\xde\xd0\x64\x36\xb0\xd3\xe1\xd0\x67\x69\x77\xd5\x9a\xdb\xdd\x9c\x36\xd7\x0d\x9d\x76\x75\xa6\x22\x96\xcf\x53\xca\x01\xf2\x7b\x7b\x63\x3a\x75\x62\x68\xc6\x5d\x09\xe8\x45\xa2\x35\x76\xe6\x98\x79\x2c\x1c\x30\x59\x37\x4b\x48\x84\x22\xb7\xe5\xfa\xb8\x12\x3b\x30\x73\x6a\xf9\x2c\x86\xde\xfd\xf0\x59\x73\x27\x39\x8e\x6a\x7d\x84\xf4\x3f\x3b\x7e\xed\x25\x9e\x3e\x7e\x63\x2b\x18\x6a\x9f\xe2\x17\x54\x3e\xeb\x29\xf1\x63\x87\x7e\x68\xe5\x61\x11\x47\xff\xbc\x09\x61\xce\xc1\xbb\x9d\xa1\x87\xd5\x8c\x75\x2e\xc8\xed\x1f\xa2\x5f\x9d\x54\x83\x3b\xb7\x01\x8a\xa9\x0c\xf0\xe3\x73\xf4\xe2\xd2\xf4\x1c\xf0\x59\x08\x7e\x8b\x88\x9c\xe7\xc2\x4b\x0c\xa1\xb5\x6a\x7a\x0f\x1d\x1e\x11\x25\xab\xb5\xa1\x69\x0d\x1b\xb4\xfe\x79\x21\x65\x57\xa3\x6d\xe1\xc3\xd3\xd3\x7c\x71\x39\xc4\xa2\x86\xfe\xbf\xbd\xfd\x6f\x70\xec\xa3\x57\x6f\xc3\x3d\x82\xdd\x2d\xe0\x38\x96\xd9\xd0\xbf\x03\x43\x82\x78\x2e\x7b\xe9\xe6\x9f\x5e\x13\xd8\xd2\xff\x41\x99\x7f\x05\x00\x00\xff\xff\xfe\x26\x21\xe2\xfa\x04\x00\x00")

func klusterletOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_klusterletOperatorYaml,
		"klusterlet/operator.yaml",
	)
}

func klusterletOperatorYaml() (*asset, error) {
	bytes, err := klusterletOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "klusterlet/operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _klusterletService_accountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcd\xcf\x4b\xc3\x40\x10\xc5\xf1\xfb\xfc\x15\x8f\x7a\x6e\xc1\xeb\xde\x24\x27\x11\x7f\x40\xd1\xfb\xb8\x79\xa6\x6b\x93\xd9\xb0\x3b\x29\x48\xd8\xff\x5d\xd4\x5a\xd0\xeb\xfb\x32\x9f\xb9\x42\x97\xe7\x8f\x92\x86\x83\xa3\xcb\xe6\x25\xbd\x2e\x9e\x4b\x85\x67\xf8\x81\x78\x9c\x69\xe8\xc6\xa5\x3a\x0b\xee\xd5\x74\xe0\x44\x73\xcc\x25\xbf\x33\xba\x88\xce\xe9\x85\xa5\xa6\x6c\x01\xa7\x6b\x39\x26\xeb\x03\xf6\x2c\xa7\x14\x79\x13\x63\x5e\xcc\x65\xa2\x6b\xaf\xae\x41\x00\xd3\x89\x01\xc7\x1f\x71\xa4\x9f\xa7\x3a\x6b\x64\xc0\x66\x5d\xb1\xbb\xbb\xc4\x87\xdf\x82\xd6\x36\xb2\xae\x5b\xa4\x37\xec\x9e\x2b\x6f\x27\x1d\xf8\xb4\x8c\xe3\x9e\xb1\xd0\xd1\x9a\xa4\xbf\x53\x0d\xb2\x3d\x3f\xfb\x46\xff\x5d\x7c\xc9\x17\x94\xd6\xb7\x26\x9f\x01\x00\x00\xff\xff\x41\xa1\xbe\x98\x0b\x01\x00\x00")

func klusterletService_accountYamlBytes() ([]byte, error) {
	return bindataRead(
		_klusterletService_accountYaml,
		"klusterlet/service_account.yaml",
	)
}

func klusterletService_accountYaml() (*asset, error) {
	bytes, err := klusterletService_accountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "klusterlet/service_account.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"hub/managedcluster/manifests/managedcluster-clusterrole.yaml":                             hubManagedclusterManifestsManagedclusterClusterroleYaml,
	"hub/managedcluster/manifests/managedcluster-clusterrolebinding.yaml":                      hubManagedclusterManifestsManagedclusterClusterrolebindingYaml,
	"hub/managedcluster/manifests/managedcluster-service-account.yaml":                         hubManagedclusterManifestsManagedclusterServiceAccountYaml,
	"klusterlet/bootstrap_secret.yaml":                                                         klusterletBootstrap_secretYaml,
	"klusterlet/cluster_role.yaml":                                                             klusterletCluster_roleYaml,
	"klusterlet/cluster_role_binding.yaml":                                                     klusterletCluster_role_bindingYaml,
	"klusterlet/crds/v1/0000_00_operator.open-cluster-management.io_klusterlets.crd.yaml":      klusterletCrdsV10000_00_operatorOpenClusterManagementIo_klusterletsCrdYaml,
	"klusterlet/crds/v1beta1/0000_00_operator.open-cluster-management.io_klusterlets.crd.yaml": klusterletCrdsV1beta10000_00_operatorOpenClusterManagementIo_klusterletsCrdYaml,
	"klusterlet/image_pull_secret.yaml":                                                        klusterletImage_pull_secretYaml,
	"klusterlet/klusterlet.yaml":                                                               klusterletKlusterletYaml,
	"klusterlet/klusterlet_admin_aggregate_clusterrole.yaml":                                   klusterletKlusterlet_admin_aggregate_clusterroleYaml,
	"klusterlet/namespace.yaml":                                                                klusterletNamespaceYaml,
	"klusterlet/operator.yaml":                                                                 klusterletOperatorYaml,
	"klusterlet/service_account.yaml":                                                          klusterletService_accountYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"hub": &bintree{nil, map[string]*bintree{
		"managedcluster": &bintree{nil, map[string]*bintree{
			"manifests": &bintree{nil, map[string]*bintree{
				"managedcluster-clusterrole.yaml":        &bintree{hubManagedclusterManifestsManagedclusterClusterroleYaml, map[string]*bintree{}},
				"managedcluster-clusterrolebinding.yaml": &bintree{hubManagedclusterManifestsManagedclusterClusterrolebindingYaml, map[string]*bintree{}},
				"managedcluster-service-account.yaml":    &bintree{hubManagedclusterManifestsManagedclusterServiceAccountYaml, map[string]*bintree{}},
			}},
		}},
	}},
	"klusterlet": &bintree{nil, map[string]*bintree{
		"bootstrap_secret.yaml":     &bintree{klusterletBootstrap_secretYaml, map[string]*bintree{}},
		"cluster_role.yaml":         &bintree{klusterletCluster_roleYaml, map[string]*bintree{}},
		"cluster_role_binding.yaml": &bintree{klusterletCluster_role_bindingYaml, map[string]*bintree{}},
		"crds": &bintree{nil, map[string]*bintree{
			"v1": &bintree{nil, map[string]*bintree{
				"0000_00_operator.open-cluster-management.io_klusterlets.crd.yaml": &bintree{klusterletCrdsV10000_00_operatorOpenClusterManagementIo_klusterletsCrdYaml, map[string]*bintree{}},
			}},
			"v1beta1": &bintree{nil, map[string]*bintree{
				"0000_00_operator.open-cluster-management.io_klusterlets.crd.yaml": &bintree{klusterletCrdsV1beta10000_00_operatorOpenClusterManagementIo_klusterletsCrdYaml, map[string]*bintree{}},
			}},
		}},
		"image_pull_secret.yaml":                      &bintree{klusterletImage_pull_secretYaml, map[string]*bintree{}},
		"klusterlet.yaml":                             &bintree{klusterletKlusterletYaml, map[string]*bintree{}},
		"klusterlet_admin_aggregate_clusterrole.yaml": &bintree{klusterletKlusterlet_admin_aggregate_clusterroleYaml, map[string]*bintree{}},
		"namespace.yaml":                              &bintree{klusterletNamespaceYaml, map[string]*bintree{}},
		"operator.yaml":                               &bintree{klusterletOperatorYaml, map[string]*bintree{}},
		"service_account.yaml":                        &bintree{klusterletService_accountYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
